<?xml version='1.0' encoding='UTF-8'?>
<chapter id="Introduction" xreflabel="Introduction">
  <?dbhtml filename="Introduction.html" ?>

  <chapterinfo>
    <keywordset>
      <keyword>AJAX</keyword>

      <keyword>JSF</keyword>

      <keyword>Ajax4jsf</keyword>
      <keyword>Component Development Kit</keyword>
    </keywordset>
  </chapterinfo>
  <title>Introduction</title>
  <para><property>Ajax4jsf</property> is an open source framework that adds AJAX capability
   into existing JSF applications without resorting to JavaScript. </para>
  <para><property>Ajax4jsf</property> leverages JavaServer Faces framework including 
  lifecycle, validation, conversion facilities and management of static and dynamic 
  resources. <property>Ajax4jsf</property> rich components with built-in AJAX support and a
   highly customizable look-and-feel can be easily incorporated into JSF applications. </para>
  <para><property>Ajax4jsf</property> allows to:</para>
  <formalpara>
    <title>Intensify the whole set of JSF benefits while working with AJAX</title>
    <para><property>Ajax4jsf</property> is fully integrated into the JSF lifecycle. While
     other frameworks only give you access to the managed bean facility, <property>Ajax4jsf</property> advantages the action and value change listeners, as well as invokes server-side validators and converters during the AJAX request-response cycle. </para>
  </formalpara>
  <formalpara>
    <title>Add AJAX capability to existing JSF applications</title>
    <para> The framework is implemented by using a component library. The library sets AJAX
     functionality into existing pages, so there is no need to write any JavaScript code or
      to replace existing components with new AJAX one. <property>Ajax4jsf</property> enables page-wide AJAX support instead of the traditional component-wide support and it gives the opportunity to define the event on the page. An event invokes an AJAX request and areas of the page which are synchronized with the JSF Component Tree after changing the data on the server by AJAX request in accordance with events fired on the client. </para>
  </formalpara>
  <formalpara>
    <title>Write your own custom rich components with built-in AJAX support</title>
    <para>In the near future, a full Component Development Kit (CDK) for 
    <property>Ajax4jsf</property> will be realized. The CDK includes a code-generation 
    facility and a templating facility using a JSP-like syntax. These capabilities help to
     avoid a routine process of a component creation. The component factory works like a 
     well-oiled machine allowing the creation of first-class rich components with built-in 
     AJAX functionality even more easily than the creation of simpler components by means of
      the traditional coding approach. </para>
  </formalpara>
  <formalpara>
    <title>Package resources with application Java classes</title>
    <para>In addition to its core, AJAX functionality of <property>Ajax4jsf</property> 
    provides an advanced support for the different resources management: pictures, JavaScript
     code, and CSS stylesheets. The resource framework makes possible to pack easily these 
     resources into Jar files along with the code of your custom components.</para>
  </formalpara>
  <formalpara>
    <title>Easily generate images on-the-fly</title>
    <para>Resource framework can generate images on-the-fly so that it becomes possible to 
    create images using the familiar approach of the 
    <emphasis role="italic"><property>"Java Graphics2D"</property></emphasis>  library.</para>
  </formalpara>
  <formalpara>
    <title>Create a modern rich user interface look-and-feel with skins-based technology</title>
    <para><property>Ajax4jsf</property> provides a skinnability feature that allows easily 
    define and manage different color schemes and other parameters of the UI with the help
     of named skin parameters. Hence it is possible to access the skin parameters from JSP
      code and the Java code (e.g. to adjust generated on-the-fly images based on the text 
      parts of the UI).</para>
  </formalpara>
  <note>
    <title>Note:</title>
    <para>skinnability is not an equivalent of traditional CSS, but a complement.</para>
  </note>
  <formalpara>
    <title>Test and create the components, actions, listeners, and pages at the same time</title>
    <para>An automated testing facility is in our roadmap for the near future. This 
    facility will generate test cases for your component as soon as you develop it. 
    The testing framework will not just test the components, but also any other server-side 
    or client-side functionality including JavaScript code. What is more, it will do all of
     this without deploying the test application into the Servlet container. </para>
  </formalpara>
  <para><property>Ajax4jsf</property> components come ready to use out-of-the-box, so 
  developers save their time and immediately gain the advantage of the mentioned <link linkend="Introduction">above</link> 
  features in Web applications creation. As a result, usage experience can be faster and 
  easily obtained.</para>
</chapter>