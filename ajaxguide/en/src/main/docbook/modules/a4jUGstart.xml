<?xml version='1.0' encoding='UTF-8'?>
<chapter id="GettingStartedWithAjax4jsf"  xreflabel="GettingStartedWithAjax4jsf">
  <?dbhtml filename="GettingStartedWithAjax4jsf.html"?>

  <chapterinfo>
    <keywordset>
      <keyword>Ajax4jsf Filter</keyword>

      <keyword>JSF</keyword>

      <keyword>Ajax4jsf</keyword>
    </keywordset>
  </chapterinfo>

  <title>Getting Started with Ajax4jsf</title>
  <section id="Environment">
  <?dbhtml filename="Environment.html" ?>
    <title>Environment</title>
    <para>
    To use Ajax4jsf framework you need JDK 1.4 or  higher, any JSF implementation
    and your favorite Servlet Container. To read more on the <property>Environments</property>, see further chapters.</para>
    <para>
    Ajax4jsf is designed in an easy-to-use way, so that you should do only a few simple steps to get AJAX functionality  in your JSF application.
  </para>
  </section>
  <section id="DownloadingAjax4jsf">
  <?dbhtml filename="DownloadingAjax4jsf.html" ?>
    <title>Downloading Ajax4jsf</title>
    <para>The latest release of <property>Ajax4jsf</property> is available for download at:<simplelist><member><ulink url="http://labs.jboss.com/portal/jbossajax4jsf/downloads">http://labs.jboss.com/portal/jbossajax4jsf/downloads</ulink></member></simplelist>
    in the <property>Ajax4jsf</property> project area under JBoss.</para>
  </section>
  <section id="Installation">
  <?dbhtml filename="Installation.html" ?>
    <title>Installation</title>
    <itemizedlist>
      <listitem>
        
          Unzip <emphasis >
            <property>&quot;ajax4jsf.zip&quot;</property>
          </emphasis> file to the chosen folder.
        
      </listitem>
      <listitem>
        
          Copy <emphasis ><property>&quot;ajax4jsf.jar&quot;</property></emphasis> and <emphasis ><property>&quot;oscache-2.3.2.jar&quot;</property></emphasis> files into the <emphasis >
            <property>&quot;WEB-INF/lib&quot;</property>
          </emphasis> folder of your application.
        
      </listitem>
	      <note>
            <title>Note:</title>
            <para>Starting from Ajax4jsf 1.1.1, the oscache  library is not required to be in the classpath anymore.
			</para>
          </note>
      <listitem>
          Add the following content into the <emphasis >
            <property>&quot;WEB-INF/web.xml&quot;</property>
          </emphasis> file of your application:
        
        <programlisting role="XML"><![CDATA[<filter> 
  <display-name>Ajax4jsf Filter</display-name> 
  <filter-name>ajax4jsf</filter-name> 
  <filter-class>org.ajax4jsf.Filter</filter-class> 
 </filter> 
 <filter-mapping> 
  <filter-name>ajax4jsf</filter-name> 
   <servlet-name>Faces Servlet</servlet-name>
   <dispatcher>REQUEST</dispatcher>
   <dispatcher>FORWARD</dispatcher>
   <dispatcher>INCLUDE</dispatcher>
 </filter-mapping>]]></programlisting>
        <note>
            <title>Note:</title>
            <para>You can copy and paste the above text from the <emphasis >
                <property>&quot;README.txt&quot;</property>
              </emphasis>     file.</para>
          </note>
      </listitem>
      <listitem>
        
        <para>Add the following line for each JSP page of your application where you are going to bring in AJAX  functionality.</para>
        <programlisting role="XML">  <![CDATA[<%@ taglib uri="https://ajax4jsf.dev.java.net/ajax" prefix="a4j"%>]]></programlisting>
        <para>For XHTML pages:</para>
	    <programlisting role="XML">&lt;xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"&gt;</programlisting>
      </listitem>
    </itemizedlist>
  </section>
  <section id="SimpleAJAXEchoProject"> 
  <?dbhtml filename="SimpleAJAXEchoProject.html" ?>
    <title>Simple AJAX Echo Project </title>
    <para>
      In our JSF project you need only one JSP page that has a form with a couple of child tags: 
      <emphasis role="bold">
        <property>&lt;h:inputText&gt;</property>
      </emphasis> and <emphasis role="bold">
        <property>&lt;h:outputText&gt;</property>
      </emphasis>. 
    </para>
    <para>This simple application  let you input some text into the <emphasis role="bold">
        <property>&lt;h:inputText&gt;</property>
      </emphasis>,
      send data to the server, and see the server response as a value of <emphasis role="bold">
        <property>&lt;h:outputText&gt;</property>
      </emphasis>. 
    </para>
    <section id="JSPPage">
    <?dbhtml filename="JSPPage.html"?> 
      <title>JSP Page</title>
      <para>Here is the necessary page (echo.jsp):</para>
      <programlisting role="JSP">    <![CDATA[<%@ taglib uri="https://ajax4jsf.dev.java.net/ajax" prefix="a4j"%>
    <%@ taglib uri="http://java.sun.com/jsf/html" prefix="h"%>
    <%@ taglib uri="http://java.sun.com/jsf/core" prefix="f"%>
    <html>
      <head>
        <title>repeater </title> 
      </head>
      <body>
        <f:view>
          <h:form>
            <h:inputText size="50" value="#{bean.text}" > 
              <a4j:support event="onkeyup" reRender="rep"/>
            </h:inputText>
            <h:outputText value="#{bean.text}" id="rep"/>
          </h:form>
        </f:view>
      </body>
    </html>]]></programlisting>
      <para>The only line that distinguishes  this page from a &quot;regular&quot; JSF one is</para>
      <programlisting role="XML"><![CDATA[<a4j:support event="onkeyup" reRender="rep"/>]]></programlisting>
      <para>The line adds  an AJAX support to the parent <emphasis role="bold">
          <property>&lt;h:inputText&gt;</property>
        </emphasis> tag. This support is 
        bound to &quot;onkeyup&quot; JavaScript event, so that  each time when this event is fired on the 
        parent tag, our application sends an AJAX request to the server. It means that the 
        text field pointed to our managed bean property contains up-to-date value of our input.
      </para>
      <para>
        The value of <emphasis ><property>&quot;reRender&quot;</property></emphasis> attribute of the <emphasis role="bold">
          <property>&lt;a4j:support&gt;</property>
        </emphasis> tag defines which part(s) of our 
        page is (are) to be updated. In this case, the only part of the page to
		update is the <emphasis role="bold">
          <property>&lt;h:outputText&gt;</property>
        </emphasis> tag because its ID value matches to the value of <emphasis ><property>&quot;reRender&quot;</property></emphasis> 
        attribute. As you see, it&apos;s not difficult  to update multiple elements on the page, only  list their IDs 
        as the value of <emphasis ><property>&quot;reRender&quot;</property></emphasis>.
      </para>
    </section>
    <section id="DataBean">
    <?dbhtml filename="DataBean.html"?>
      <title>Data Bean</title>
      <para>In order to build this application, you should create a managed bean:</para>
      <programlisting role="JAVA">package demo;
	  
public class Bean {
	private String text;
	public Bean() {
	}
	public String getText() {
		return text;
	}
	public void setText(String text) {
		this.text = text;
	}
}</programlisting>
    </section>
    <section id="faces-config.xml">
    <?dbhtml filename="faces-config.xml.html"?>
      <title>faces-config.xml</title>
      <para>Next, it&apos;s necessary  to register your bean inside of the faces-config.xml file:</para>
      <programlisting role="XML">    <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE faces-config PUBLIC "-//Sun Microsystems, Inc.//DTD  JavaServer Faces Config 1.1//EN"
    "http://java.sun.com/dtd/web-facesconfig_1_1.dtd">
    <faces-config>
      <managed-bean>
        <managed-bean-name>bean</managed-bean-name>
        <managed-bean-class>demo.Bean</managed-bean-class>
        <managed-bean-scope>request</managed-bean-scope>
        <managed-property>
          <property-name>text</property-name>
          <value/>
        </managed-property>
      </managed-bean>
    </faces-config>]]></programlisting>
      <para> <note>
          <title>Note:</title>
          <para>Nothing that relates directly to Ajax4jsf is required
        in the configuration file.</para>
        </note></para>
    </section>
    <section id="Web.xml">
    <?dbhtml filename="Web.xml.html"?>
      <title>Web.xml</title>
      <para>It is also necessary to add jar files (see <ulink url="GettingStartedWithAjax4jsf.html#Installation">installation chapter</ulink>) and modify the &quot;web.xml&quot; file:
      </para>
      <programlisting role="XML">    <![CDATA[<?xml version="1.0"?>
    <web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee  http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
      
      <display-name>a4jEchoText</display-name>
      <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
      </context-param>
      <filter> 
		<display-name>Ajax4jsf Filter</display-name> 
		<filter-name>ajax4jsf</filter-name> 
		<filter-class>org.ajax4jsf.Filter</filter-class> 
	  </filter> 
	  <filter-mapping> 
	    <filter-name>ajax4jsf</filter-name> 
		<servlet-name>Faces Servlet</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	   </filter-map>
       <listener>
        <listener-class>
          com.sun.faces.config.ConfigureListener
        </listener-class>
      </listener>
      
      <!-- Faces Servlet -->
      <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>
          javax.faces.webapp.FacesServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
      </servlet>
      
      <!-- Faces Servlet Mapping -->
      <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
      </servlet-mapping>
      <login-config>
        <auth-method>BASIC</auth-method>
      </login-config>
    </web-app>]]></programlisting>
      <para>Now your application should work.</para>
    </section>
    <section id="Deployment">
    <?dbhtml filename="Deployment.html"?>
      <title>Deployment</title>
      <para>Finally, you should be able to place this application on your Web
        server.To start your project, point
        your browser at
<ulink url="http://localhost:8080/a4jEchoText/echo.jsf">http://localhost:8080/a4jEchoText/echo.jsf</ulink>
</para>
    </section>
  </section>
  <section id="Relevant_src">
    <title>Other Relevant Resources</title>
    <para><ulink url="http://jsf.javabeat.net/articles/2007/06/introduction-to-ajax4jsf/3">Introduction to Ajax4Jsf - Sample Application</ulink> by Shunmuga Raja</para>
  </section>
  <section id="Relevant_src">
    <title>Other Relevant Resources</title>
    <para><ulink url="http://jsf.javabeat.net/articles/2007/06/introduction-to-ajax4jsf/3">Introduction to Ajax4Jsf - Sample Application</ulink> by Shunmuga Raja</para>
  </section>
</chapter>
