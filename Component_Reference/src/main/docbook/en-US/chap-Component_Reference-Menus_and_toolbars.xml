<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="chap-Component_Reference-Menus_and_toolbars">
	<title>Menus and toolbars</title>
	<!--  In development notification  -->
	<important>
		<title>Documentation in development</title>
		<para>
			Some concepts covered in this chapter may refer to the previous version of <productname>Richfaces</productname>, version 3.3.3. This chapter is scheduled for review to ensure all information is up to date.
		</para>
	</important>
	<para>
		Read this chapter for details on menu and toolbar components.
	</para>

	<!-- TODO not in M5 -->
	<!--<rich:contextMenu>-->
	<!--
	<section id="sect-Component_Reference-Menus_and_toolbars-richcontextMenu">
		<title><sgmltag>&lt;rich:contextMenu&gt;</sgmltag></title>
		<para>
			Incomplete
		</para>
	</section>
	-->
	
	<!--<rich:dropDownMenu>-->
	<section id="sect-Component_Reference-Menus_and_toolbars-richdropDownMenu">
		<title><sgmltag>&lt;rich:dropDownMenu&gt;</sgmltag></title>
		<para>
			The <sgmltag>&lt;rich:dropDownMenu&gt;</sgmltag> component is used for creating a drop-down, hierarchical menu. It can be used with the <sgmltag>&lt;rich:toolbar&gt;</sgmltag> component to create menus in an application's toolbar.
		</para>
		<figure id="figu-Component_Reference-richdropDownMenu-richdropDownMenu">
			<title><sgmltag>&lt;rich:dropDownMenu&gt;</sgmltag></title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/figu-Component_Reference-richdropDownMenu-richdropDownMenu.png" format="PNG" />
				</imageobject>
				<textobject>
					<para>
						A <sgmltag>&lt;rich:dropDownMenu&gt;</sgmltag> component in a toolbar.
					</para>
				</textobject>
			</mediaobject>
		</figure>

		<section id="sect-Component_Reference-richdropDownMenu-Basic_usage">
			<title>Basic usage</title>
			<para>
				The <sgmltag>&lt;rich:dropDownMenu&gt;</sgmltag> component only requires the <varname>label</varname> attribute for basic usage. Use the <varname>label</varname> attribute to define the text label that appears as the title of the menu. Clicking on the title drops the menu down.
			</para>
			<para>
				Alternatively, use the <literal>label</literal> facet to define the menu title. If the <literal>label</literal> facet is used, the <varname>label</varname> attribute is not necessary.
			</para>
		</section>

		<section id="sect-Component_Reference-richdropDownMenu-Menu_content">
			<title>Menu content</title>
			<para>
				To set the content of the drop-down menu and any sub-menus, use the <sgmltag>&lt;rich:menuItem&gt;</sgmltag>, <sgmltag>&lt;rich:menuGroup&gt;</sgmltag>, and <sgmltag>&lt;rich:menuSeparator&gt;</sgmltag> components. These components are detailed in <xref linkend="sect-Component_Reference-Menus_and_toolbars-Menu_sub-components" />.
			</para>
		</section>

		<section id="sect-Component_Reference-richdropDownMenu-Appearance">
			<title>Appearance</title>
			<para>
				Use the <varname>jointPoint</varname> and <varname>direction</varname> attributes to determine the direction and location of the menu when it appears. The <varname>jointPoint</varname> and <varname>direction</varname> attributes both use the following settings:
			</para>
			<variablelist>
				<varlistentry>
					<term><literal>topLeft</literal></term>
					<term><literal>topRight</literal></term>
					<term><literal>bottomLeft</literal></term>
					<term><literal>bottomRight</literal></term>
					<listitem>
						<para>
							When used with the <varname>jointPoint</varname> attribute, the menu is attached to the top-left, top-right, bottom-left, or bottom-right of the control as appropriate.
						</para>
						<para>
							When used with the <varname>direction</varname> attribute, the menu appears to the top-left, top-right, bottom-left, or bottom-right of the joint location as appropriate.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><literal>auto</literal></term>
					<listitem>
						<para>
							The direction or joint location is determined automatically.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><literal>autoLeft</literal></term>
					<term><literal>autoRight</literal></term>
					<term><literal>autoTop</literal></term>
					<term><literal>autoBottom</literal></term>
					<listitem>
						<para>
							When used with the <varname>jointPoint</varname> attribute, the joint location is determined automatically, but defaults to either the left, right, top, or bottom of the control as appropriate.
						</para>
						<para>
							When used with the <varname>direction</varname> attribute, the menu direction is determined automatically, but defaults to either the left, right, top, or bottom of the joint location as appropriate.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
		
		<section id="sect-Component_Reference-richdropDownMenu-Expanding_and_collapsing_the_menu">
			<title>Expanding and collapsing the menu</title>
			<para>
				By default, the menu drops down when the title is clicked. To drop down with a different event, use the <varname>eventShow</varname> attribute to define the event instead.
			</para>
			<para>
				Menus can be navigated using the keyboard. Additionally, menus can be navigated programmatically using the JavaScript <acronym>API</acronym>. The JavaScript API allows the following methods:
			</para>
			<variablelist>
				<varlistentry>
					<term><methodname>show()</methodname></term>
					<listitem>
						<para>
							The <methodname>show()</methodname> method shows the menu.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><methodname>hide()</methodname></term>
					<listitem>
						<para>
							The <methodname>hide()</methodname> method hides the menu.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><methodname>activateItem(menuItemId)</methodname></term>
					<listitem>
						<para>
							The <methodname>activateItem(menuItemId)</methodname> activates the menu item with the <parameter>menuItemId</parameter> identifier.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				Use the <varname>mode</varname> attribute to determine how the menu requests are submitted:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						<literal>server</literal>, the default setting, submits the form normally and completely refreshes the page.
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>ajax</literal> performs an Ajax form submission, and re-renders elements specified with the <varname>render</varname> attribute.
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>client</literal> causes the <varname>action</varname> and <varname>actionListener</varname> items to be ignored, and the behavior is fully defined by the nested components or custom JavaScript instead of responses from submissions.
					</para>
				</listitem>
			</itemizedlist>
		</section>

		<section id="sect-Component_Reference-richdropDownMenu-Reference_data">
			<title>Reference data</title>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>component-type</parameter>: <classname>org.richfaces.DropDownMenu</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlDropDownMenu</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>component-family</parameter>: <classname>org.richfaces.DropDownMenu</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>renderer-type</parameter>: <classname>org.richfaces.DropDownMenuRenderer</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.DropDownMenuTag</classname>
					</para>
				</listitem>
			</itemizedlist>
		</section>
	</section>

	<section id="sect-Component_Reference-Menus_and_toolbars-Menu_sub-components">
		<title>Menu sub-components</title>
		<para>
			The <sgmltag>&lt;rich:menuItem&gt;</sgmltag>, <sgmltag>&lt;rich:menuGroup&gt;</sgmltag>, and <sgmltag>&lt;rich:menuSeparator&gt;</sgmltag> components are used to construct menus for the <sgmltag>&lt;rich:dropDownMenu&gt;</sgmltag> component. Refer to <xref linkend="sect-Component_Reference-Menus_and_toolbars-richdropDownMenu" /> for more details on the <sgmltag>&lt;rich:dropDownMenu&gt;</sgmltag> component.
		</para>
	
		<!--<rich:menuItem>-->
		<section id="sect-Component_Reference-Menus_and_toolbars-richmenuItem">
			<title><sgmltag>&lt;rich:menuItem&gt;</sgmltag></title>
			<para>
				The <sgmltag>&lt;rich:menuItem&gt;</sgmltag> component represents a single item in a menu control. The <sgmltag>&lt;rich:menuItem&gt;</sgmltag> component can be also be used as a seperate component without a parent menu component, such as on a toolbar.
			</para>

			<section id="sect-Component_Reference-richmenuItem-Basic_usage">
				<title>Basic usage</title>
				<para>
					The <sgmltag>&lt;rich:menuItem&gt;</sgmltag> component requires the <varname>label</varname> attribute for basic usage. The <varname>label</varname> attribute is the text label for the menu item.
				</para>
			</section>

			<section id="sect-Component_Reference-richmenuItem-Appearance">
				<title>Appearance</title>
				<para>
					Icons can be added to menu items through the use of two icon attributes. The <varname>icon</varname> attribute specifies the normal icon, while the <varname>iconDisabled</varname> attribute specifies the icon for a disabled item.
				</para>
				<para>
					Alternatively, define facets with the names <literal>icon</literal> and <literal>iconDisabled</literal> to set the icons. If facets are defined, the <varname>icon</varname> and <varname>iconDisabled</varname> attributes are ignored. Using facets for icons allows more complex usage; example shows a checkbox being used in place of an icon.
				</para>
				<example id="exam-Component_Reference-richmenuItem-Icon_facets">
					<title>Icon facets</title>
					<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richmenuItem-Icon_facets.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
				</example>
			</section>
			
			<section id="sect-Component_Reference-richmenuItem-Submission_modes">
				<title>Submission modes</title>
				<para>
					Use the <varname>submitMode</varname> attribute to determine how the menu item requests are submitted:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							<literal>server</literal>, the default setting, submits the form normally and completely refreshes the page.
						</para>
					</listitem>
					<listitem>
						<para>
							<literal>ajax</literal> performs an Ajax form submission, and re-renders elements specified with the <varname>render</varname> attribute.
						</para>
					</listitem>
					<listitem>
						<para>
							<literal>client</literal> causes the <varname>action</varname> and <varname>actionListener</varname> items to be ignored, and the behavior is fully defined by the nested components instead of responses from submissions.
						</para>
					</listitem>
				</itemizedlist>
			</section>

			<section id="sect-Component_Reference-richmenuItem-Reference_data">
				<title>Reference data</title>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>component-type</parameter>: <classname>org.richfaces.MenuItem</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlMenuItem</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-family</parameter>: <classname>org.richfaces.DropDownMenu</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>renderer-type</parameter>: <classname>org.richfaces.MenuItemRenderer</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.MenuItemTag</classname>
						</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		
		<!--<rich:menuGroup>-->
		<section id="sect-Component_Reference-Menus_and_toolbars-richmenuGroup">
			<title><sgmltag>&lt;rich:menuGroup&gt;</sgmltag></title>
			<para>
				The <sgmltag>&lt;rich:menuGroup&gt;</sgmltag> component represents an expandable sub-menu in a menu control. The <sgmltag>&lt;rich:menuGroup&gt;</sgmltag> component can contain a number of <sgmltag>&lt;rich:menuItem&gt;</sgmltag> components, or further nested <sgmltag>&lt;rich:menuGroup&gt;</sgmltag> components.
			</para>

			<section id="sect-Component_Reference-richmenuGroup-Basic_usage">
				<title>Basic usage</title>
				<para>
					The <sgmltag>&lt;rich:menuGroup&gt;</sgmltag> component requires the <varname>value</varname> attribute for basic usage. The <varname>value</varname> attribute is the text label for the menu item.
				</para>
				<para>
					Additionally, the <sgmltag>&lt;rich:menuGroup&gt;</sgmltag> component must contain child <sgmltag>&lt;rich:menuItem&gt;</sgmltag> components or <sgmltag>&lt;rich:menuGroup&gt;</sgmltag> components.
				</para>
			</section>

			<section id="sect-Component_Reference-richmenuGroup-Appearance">
				<title>Appearance</title>
				<para>
					Icons can be added to menu groups through the use of two icon attributes. The <varname>icon</varname> attribute specifies the normal icon, while the <varname>iconDisabled</varname> attribute specifies the icon for a disabled group.
				</para>
				<para>
					Alternatively, define facets with the names <literal>icon</literal> and <literal>iconDisabled</literal> to set the icons. If facets are defined, the <varname>icon</varname> and <varname>iconDisabled</varname> attributes are ignored.
				</para>
				<para>
					The <sgmltag>&lt;rich:menuGroup&gt;</sgmltag> component can be positioned using the <varname>jointPoint</varname> and <varname>direction</varname> attributes, the same as the parent menu control. For details on the <varname>jointPoint</varname> and <varname>direction</varname> attributes, refer to <xref linkend="sect-Component_Reference-richdropDownMenu-Appearance"/>.
				</para>
			</section>
			
			<!--
			<section id="sect-Component_Reference-richmenuGroup-Submission_modes">
				<title>Submission modes</title>
				<para>
					Use the <varname>submitMode</varname> attribute to determine how the menu item requests are submitted:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							<literal>server</literal>, the default setting, submits the form normally and completely refreshes the page.
						</para>
					</listitem>
					<listitem>
						<para>
							<literal>ajax</literal> performs an Ajax form submission, and re-renders elements specified with the <varname>render</varname> attribute.
						</para>
					</listitem>
					<listitem>
						<para>
							<literal>client</literal> causes the <varname>action</varname> and <varname>actionListener</varname> items to be ignored, and the behavior is fully defined by the nested components instead of responses from submissions.
						</para>
					</listitem>
				</itemizedlist>
			</section>
			-->

			<section id="sect-Component_Reference-richmenuGroup-Reference_data">
				<title>Reference data</title>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>component-type</parameter>: <classname>org.richfaces.MenuGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlMenuGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-family</parameter>: <classname>org.richfaces.DropDownMenu</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>renderer-type</parameter>: <classname>org.richfaces.MenuGroupRenderer</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.MenuGroupTag</classname>
						</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		
		<!--<rich:menuSeparator>-->
		<section id="sect-Component_Reference-Menus_and_toolbars-richmenuSeparator">
			<title><sgmltag>&lt;rich:menuSeparator&gt;</sgmltag></title>
			<para>
				The <sgmltag>&lt;rich:menuSeparator&gt;</sgmltag> component represents a separating divider in a menu control.
			</para>

			<section id="sect-Component_Reference-richmenuSeparator-Basic_usage">
				<title>Basic usage</title>
				<para>
					The <sgmltag>&lt;rich:menuSeparator&gt;</sgmltag> component does not require any attributes for basic usage. Add it as a child to a menu component to separator menu items and menu groups.
				</para>
			</section>

			<section id="sect-Component_Reference-richmenuSeparator-Reference_data">
				<title>Reference data</title>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>component-type</parameter>: <classname>org.richfaces.MenuSeparator</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlMenuSeparator</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-family</parameter>: <classname>org.richfaces.DropDownMenu</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>renderer-type</parameter>: <classname>org.richfaces.MenuSeparatorRenderer</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.MenuSeparatorTag</classname>
						</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		
	</section>

	<!-- TODO not in M5 -->
	<!--<rich:panelMenu>-->
	<section id="sect-Component_Reference-Menus_and_toolbars-richpanelMenu">
		<title><sgmltag>&lt;rich:panelMenu&gt;</sgmltag></title>
		<para>
			The <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component is used in conjunction with <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> and <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> to create an expanding, hierarchical menu. The <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component's appearance can be highly customized, and the hierarchy can stretch to any number of sub-levels.
		</para>

		<example id="exam-Component_Reference-richpanelMenu-richpanelMenu">
			<title>richpanelMenu</title>
			<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richpanelMenu-richpanelMenu.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/figu-Component_Reference-richpanelMenu-richpanelMenu.png" format="PNG" />
				</imageobject>
				<textobject>
					<para>
						A panel menu. The first menu group is collapsed. The second menu group is expanded; it contains menu items and a further menu group, which is currently selected and expanded. The third menu item is not a group and as such is not expandable.
					</para>
				</textobject>
			</mediaobject>
		</example>

		<section id="sect-Component_Reference-richpanelMenu-Basic_usage">
			<title>Basic usage</title>
			<para>
				The <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component does not need any extra attributes declared for basic usage. However, it does require child <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> and <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> components. Refer to <xref linkend="sect-Component_Reference-Menus_and_toolbars-richpanelMenuGroup" /> and <xref linkend="sect-Component_Reference-Menus_and_toolbars-richpanelMenuItem" /> for details on these child components.
			</para>
		</section>

		<section id="sect-Component_Reference-richpanelMenu-Interactivity_options">
			<title>Interactivity options</title>
			<para>
				The <varname>activeItem</varname> attribute is used to point to the name of the currently selected menu item.
			</para>
			<para>
				By default, the event to expand the menu is a mouse click. Set the <varname>expandEvent</varname> attribute to specify a different event to expand menus. Multiple levels of sub-menus can be expanded in one action. Set <code>expandSingle="true"</code> to only expand one sub-menu at a time.
			</para>
			<para>
				Similarly, the default event to collapse the menu is a mouse click. Set the <varname>collapseEvent</varname> attribute to specify a different event to collapse menus.
			</para>
			<para>
				As with other control components, set <code>disabled="true"</code> to disable the <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> comonent. Child menu components can be disabled in the same way.
			</para>
		</section>
		
		<section id="sect-Component_Reference-richpanelMenu-Appearance">
			<title>Appearance</title>
			<para>
				Icons for the panel menu can be chosen from a set of standard icons. Icons can be set for the top panel menu, child panel menus, and child item. There are three different menu states that the icon represents, as well as icons for both the left and right side of the item title. The icons can also be managed using facets.
			</para>
			<variablelist>
				<varlistentry>
					<term><varname>topGroupExpandedLeftIcon</varname></term>
					<term><varname>topGroupExpandedRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for the top level menu when it is expanded. The related facet is the <literal>topGroupExpandedClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>topGroupCollapsedLeftIcon</varname></term>
					<term><varname>topGroupCollapsedRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for the top level menu when it is collapsed. The related facet is the <literal>topGroupCollapsedClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>topGroupDisabledLeftIcon</varname></term>
					<term><varname>topGroupDisabledRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for the top level menu when it is disabled. The related facet is the <literal>topGroupDisabledClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>topItemLeftIcon</varname></term>
					<term><varname>topItemRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for a top level menu item. The related facet is the <literal>topItemClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>topItemDisabledLeftIcon</varname></term>
					<term><varname>topItemDisabledRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for a top level menu item when it is disabled. The related facet is the <literal>topItemDisabledClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>groupExpandedLeftIcon</varname></term>
					<term><varname>groupExpandedRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for sub-menus that are not the top-level menu when they are expanded. The related facet is the <literal>groupExpandedClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>groupCollapsedLeftIcon</varname></term>
					<term><varname>groupCollapsedRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for sub-menus that are not the top-level menu when they are collapsed. The related facet is the <literal>groupCollapsedClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>groupDisabledLeftIcon</varname></term>
					<term><varname>groupDisabledRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for sub-menus that are not the top-level menu when they are disabled. The related facet is the <literal>groupDisabledClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>itemLeftIcon</varname></term>
					<term><varname>itemRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for items in the menus. The related facet is the <literal>itemClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><varname>itemDisabledLeftIcon</varname></term>
					<term><varname>itemDisabledRightIcon</varname></term>
					<listitem>
						<para>
							These attributes determine the icons for items in the menus when they are disabled. The related facet is the <literal>itemDisabledClass</literal> facet.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				<xref linkend="exam-Component_Reference-richpanelMenu-richpanelMenu" /> demonstrates the use of icon declaration at the panel menu level. The standard icons are shown in <xref linkend="figu-Component_Reference-richpanelMenu-Standard_icons" />.
			</para>
			<figure id="figu-Component_Reference-richpanelMenu-Standard_icons">
				<title><sgmltag>&lt;Standard icons&gt;</sgmltag></title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/figu-Component_Reference-richpanelMenuGroup-Standard_icons.png" format="PNG" />
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				Alternatively, point the icon attributes to the paths of image files. The image files are then used as icons.
			</para>
			<para>
				Any icons specified by child <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> and <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> components overwrite the relevant icons declared with the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
			</para>
		</section>
			
		<section id="sect-Component_Reference-richpanelMenu-Submission_modes">
			<title>Submission modes</title>
			<para>
				The <varname>itemMode</varname> attribute defines the submission mode for normal menu items that link to content, and the <varname>groupMode</varname> attribute defines the submission mode for menu items that expand and collapse. The settings for these attributes apply to the entire menu unless a menu item defines its own individual <varname>itemMode</varname> or <varname>groupMode</varname>. The possible values for <varname>itemMode</varname> and <varname>groupMode</varname> are as follows:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						<literal>server</literal>, the default setting, which submits the form normally and completely refreshes the page.
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>ajax</literal>, which performs an Ajax form submission, and re-renders elements specified with the <varname>render</varname> attribute.
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>none</literal>, which causes the <varname>action</varname> and <varname>actionListener</varname> items to be ignored, and the behavior is fully defined by the nested components instead of responses from submissions.
					</para>
				</listitem>
			</itemizedlist>
		</section>

		<section id="sect-Component_Reference-richpanelMenu-Reference_data">
			<title>Reference data</title>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>component-type</parameter>: <classname>org.richfaces.PanelMenu</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlPanelMenu</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>component-family</parameter>: <classname>org.richfaces.PanelMenu</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>renderer-type</parameter>: <classname>org.richfaces.PanelMenuRenderer</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.PanelMenuTag</classname>
					</para>
				</listitem>
			</itemizedlist>
		</section>
	
		<!--<rich:panelMenuGroup>-->
		<section id="sect-Component_Reference-Menus_and_toolbars-richpanelMenuGroup">
			<title><sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag></title>
			<para>
				The <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> component defines a group of <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> components inside a <sgmltag>&lt;rich:panelMenu&gt;</sgmltag>.
			</para>

			<section id="sect-Component_Reference-richpanelMenuGroup-Basic_usage">
				<title>Basic usage</title>
				<para>
					The <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> component needs the <varname>label</varname> attribute declared, which specifies the text to show for the menu entry. Additionally, the <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> component at least one <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> or <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> components as child elements.
				</para>
			</section>

			<section id="sect-Component_Reference-richpanelMenuGroup-Appearance">
				<title>Appearance</title>
				<para>
					Icons for the menu group are inherited from the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component. Refer to <xref linkend="sect-Component_Reference-richpanelMenu-Appearance" /> for details on icon attributes and facets. Alternatively, the menu group's icons can be re-defined at the <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> component level, and these settings will be used instead of the parent component's settings.
				</para>
				<!--
				<variablelist>
					<varlistentry>
						<term><varname>leftExpandedIcon</varname></term>
						<term><varname>rightExpandedIcon</varname></term>
						<listitem>
							<para>
								These attributes determine the icons for a menu group when it is expanded. If unspecified, the menu group uses the <varname>groupExpandedLeftIcon</varname> and <varname>groupExpandedRightIcon</varname> parameters defined in the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><varname>leftCollapsedIcon</varname></term>
						<term><varname>rightCollapsedIcon</varname></term>
						<listitem>
							<para>
								These attributes determine the icons for a menu group menu when it is collapsed. If unspecified, the menu group uses the <varname>groupCollapsedLeftIcon</varname> and <varname>groupCollapsedRightIcon</varname> parameters defined in the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><varname>leftDisabledIcon</varname></term>
						<term><varname>rightDisabledIcon</varname></term>
						<listitem>
							<para>
								These attributes determine the icons for a menu group menu when it is disabled. If unspecified, the menu group uses the <varname>groupDisabledLeftIcon</varname> and <varname>groupDisabledRightIcon</varname> parameters defined in the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				<para>
					The standard icons are shown in <xref linkend="figu-Component_Reference-richpanelMenuGroup-Standard_icons" />.
				</para>
				<figure id="figu-Component_Reference-richpanelMenuGroup-Standard_icons">
					<title><sgmltag>&lt;Standard icons&gt;</sgmltag></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/figu-Component_Reference-richpanelMenuGroup-Standard_icons.png" format="PNG" />
						</imageobject>
					</mediaobject>
				</figure>
				<para>
					Alternatively, point the icon attributes to the paths of image files. The image files are then used as icons.
				</para>
				<example id="exam-Component_Reference-richpanelMenuGroup-Using_custom_icons">
					<title>Using custom icons</title>
					<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richpanelMenuGroup-Using_custom_icons.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
				</example>
			-->
			</section>
			
			<section id="sect-Component_Reference-richpanelMenuGroup-Submission_modes">
				<title>Submission modes</title>
				<para>
					If the <varname>mode</varname> attribute is unspecified, the submission behavior for the group is inherited from the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag>. Otherwise, the <varname>mode</varname> setting is used instead of the parent's behavior. Refer to <xref linkend="sect-Component_Reference-richpanelMenu-Submission_modes" /> for submission mode settings.
				</para>
			</section>
			
			<section id="sect-Component_Reference-richpanelMenuGroup-Reference_data">
				<title>Reference data</title>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>component-type</parameter>: <classname>org.richfaces.PanelMenuGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlPanelMenuGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-family</parameter>: <classname>org.richfaces.PanelMenuGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>renderer-type</parameter>: <classname>org.richfaces.PanelMenuGroupRenderer</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.PanelMenuGroupTag</classname>
						</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		
		<!--<rich:panelMenuItem>-->
		<section id="sect-Component_Reference-Menus_and_toolbars-richpanelMenuItem">
			<title><sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag></title>
			<para>
				The <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> component represents a single item inside a <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> component, which is in turn part of a <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
			</para>

			<section id="sect-Component_Reference-richpanelMenuItem-Basic_usage">
				<title>Basic usage</title>
				<para>
					The <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> component needs the <varname>label</varname> attribute declared, which specifies the text to show for the menu entry.
				</para>
			</section>

			<section id="sect-Component_Reference-richpanelMenuItem-Appearance">
				<title>Appearance</title>
				<para>
					Icons for the menu item are inherited from the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> or <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> component. Refer to <xref linkend="sect-Component_Reference-richpanelMenu-Appearance" /> for details on icon attributes and facets. Alternatively, the menu item's icons can be re-defined at the <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> component level, and these settings will be used instead of the parent component's settings.
				</para>
				<!--
				<para>
					Icons for menu items can be chosen from a set of standard icons. There are two different menu states that the icon represents, as well as icons for both the left and right side of the item title:
				</para>
				<variablelist>
					<varlistentry>
						<term><varname>itemLeftIcon</varname></term>
						<term><varname>itemRightIcon</varname></term>
						<listitem>
							<para>
								These attributes determine the icons for a menu item. If unspecified, the menu group uses the <varname>itemLeftIcon</varname> and <varname>itemRightIcon</varname> parameters defined in the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term><varname>itemDisabledLeftIcon</varname></term>
						<term><varname>itemDisabledRightIcon</varname></term>
						<listitem>
							<para>
								These attributes determine the icons for a menu item when it is disabled. If unspecified, the menu group uses the <varname>itemDisabledRightIcon</varname> and <varname>itemDisabledLeftIcon</varname> parameters defined in the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
				<para>The standard icons are shown in <xref linkend="figu-Component_Reference-Basic_column_example-Basic_column_example" />.
				</para>
				<figure id="figu-Component_Reference-richpanelMenuItem-Standard_icons">
					<title>Standard icons</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/figu-Component_Reference-richpanelMenuItem-Standard_icons.png" format="PNG" />
						</imageobject>
					</mediaobject>
				</figure>
				<para>
					Alternatively, point the icon attributes to the paths of image files. The image files are then used as icons.
				</para>
				<example id="exam-Component_Reference-richpanelMenuItem-Using_custom_icons">
					<title>Using custom icons</title>
					<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richpanelMenuItem-Using_custom_icons.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
				</example>
				<para>
					Any icons specified by child <sgmltag>&lt;rich:panelMenuGroup&gt;</sgmltag> and <sgmltag>&lt;rich:panelMenuItem&gt;</sgmltag> components overwrite the icons declared with the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag> component.
				</para>
				-->
			</section>
			
			<section id="sect-Component_Reference-richpanelMenuItem-Submission_modes">
				<title>Submission modes</title>
				<para>
					If the <varname>mode</varname> is unspecified, the submission behavior for the item is inherited from the parent <sgmltag>&lt;rich:panelMenu&gt;</sgmltag>. Otherwise, the <varname>mode</varname> setting is used instead of the parent's behavior.
				</para>
			</section>
			
			<section id="sect-Component_Reference-richpanelMenuItem-Reference_data">
				<title>Reference data</title>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>component-type</parameter>: <classname>org.richfaces.PanelMenuItem</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlPanelMenuItem</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-family</parameter>: <classname>org.richfaces.PanelMenuItem</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>renderer-type</parameter>: <classname>org.richfaces.PanelMenuItemRenderer</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.PanelMenuItemTag</classname>
						</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		
	</section>
	
	<!--<rich:toolBar>-->
	<section id="sect-Component_Reference-Menus_and_toolbars-richtoolbar">
		<title><sgmltag>&lt;rich:toolbar&gt;</sgmltag></title>
		<para>
			The <sgmltag>&lt;rich:toolbar&gt;</sgmltag> component is a horizontal toolbar. Any JavaServer Faces (<acronym>JSF</acronym>) component can be added to the toolbar.
		</para>
		<figure id="figu-Component_Reference-richtoolbar-richtoolbar">
			<title><sgmltag>&lt;rich:toolbar&gt;</sgmltag></title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/figu-Component_Reference-richtoolbar-richtoolbar.png" format="PNG" />
				</imageobject>
				<textobject>
					<para>
						A <sgmltag>&lt;rich:toolbar&gt;</sgmltag> component with a label, hyperlinks, item separators, and a text box.
					</para>
				</textobject>
			</mediaobject>
		</figure>

		<section id="sect-Component_Reference-richtoolbar-Basic_usage">
			<title>Basic usage</title>
			<para>
				The <sgmltag>&lt;rich:toolbar&gt;</sgmltag> component does not require any attributes to be defined for basic usage. Add child components to the <sgmltag>&lt;rich:toolbar&gt;</sgmltag> component to have them appear on the toolbar when rendered.
			</para>
			<example id="exam-Component_Reference-richtoolbar-Basic_usage">
				<title>Basic usage</title>
				<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richtoolbar-Basic_usage.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
			</example>
		</section>

		<section id="sect-Component_Reference-richtoolbar-Appearance">
			<title>Appearance</title>
			<para>
				Set the width and height of the toolbar using the common <varname>width</varname> and <varname>height</varname> attributes.
			</para>
			<para>
				Items on the toolbar can be separated by a graphical item separator. Use the <varname>itemSeparator</varname> attribute to specify one of the standard separator styles:
			</para>
			<itemizedlist>
				<listitem>
					<para>
						<literal>none</literal>, the default appearance, does not show any item separators.
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>disc</literal> shows a small circular disc to separate items: 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/figu-Component_Reference-richtoolbar-disc.png" format="PNG" />
							</imageobject>
							<textobject>
								A small circular disc to separate items.
							</textobject>
						</inlinemediaobject>
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>grid</literal> shows a grid pattern to separate items: 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/figu-Component_Reference-richtoolbar-grid.png" format="PNG" />
							</imageobject>
							<textobject>
								A grid pattern to separate items.
							</textobject>
						</inlinemediaobject>
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>line</literal> shows a vertical line to separate items: 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/figu-Component_Reference-richtoolbar-line.png" format="PNG" />
							</imageobject>
							<textobject>
								A vertical line to separate items.
							</textobject>
						</inlinemediaobject>
					</para>
				</listitem>
				<listitem>
					<para>
						<literal>square</literal> shows a small square to separate items: 
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="images/figu-Component_Reference-richtoolbar-square.png" format="PNG" />
							</imageobject>
							<textobject>
								A small square to separate items.
							</textobject>
						</inlinemediaobject>
					</para>
				</listitem>
			</itemizedlist>
			<para>
				Alternatively, use the <varname>itemSeparator</varname> attribute to specify a URL to an image. The image is then used as an item separator. The appearance of the item separator can be additionally customized by using the <literal>itemSeparator</literal> facet.
			</para>
		</section>

		<section id="sect-Component_Reference-richtoolbar-Grouping_items">
			<title>Grouping items</title>
			<para>
				Group together multiple items on the toolbar by using the <sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag> child component. Refer to <xref linkend="sect-Component_Reference-Menus_and_toolbars-richtoolbarGroup" /> for full details on the <sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag> component.
			</para>
		</section>

		<section id="sect-Component_Reference-richtoolbar-Reference_data">
			<title>Reference data</title>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>component-type</parameter>: <classname>org.richfaces.Toolbar</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlToolbar</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>component-family</parameter>: <classname>org.richfaces.Toolbar</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>renderer-type</parameter>: <classname>org.richfaces.ToolbarRenderer</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.ToolbarTag</classname>
					</para>
				</listitem>
			</itemizedlist>
		</section>

		<!--<rich:toolbarGroup>-->
		<section id="sect-Component_Reference-Menus_and_toolbars-richtoolbarGroup">
			<title><sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag></title>
			<para>
				The <sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag> component is a child component of the <sgmltag>&lt;rich:toolbar&gt;</sgmltag> component. The <sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag> component is used to group a number of items together on a toolbar.
			</para>

			<section id="sect-Component_Reference-richtoolbarGroup-Basic_usage">
				<title>Basic usage</title>
				<para>
					Like the <sgmltag>&lt;rich:toolbar&gt;</sgmltag> parent component, the <sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag> component does not require any extra attributes for basic functionality. Add child components to the <sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag> component to have them appear grouped on the parent toolbar when rendered.
				</para>
			</section>

			<section id="sect-Component_Reference-richtoolbarGroup-Appearance">
				<title>Appearance</title>
				<para>
					Similar to the <sgmltag>&lt;rich:toolbar&gt;</sgmltag> component, items within a <sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag> can be separated by specifying the <varname>itemSeparator</varname> attribute. Refer to <xref linkend="sect-Component_Reference-richtoolbar-Appearance" /> for details on using the <varname>itemSeparator</varname> attribute.
				</para>
				<para>
					Groups of toolbar items can be located on either the left-hand side or the right-hand side of the parent toolbar. By default, they appear to the left. To locate the toolbar group to the right of the parent toolbar, set <code>location="right"</code>.
				</para>
				<example id="exam-Component_Reference-richtoolbarGroup-richtoolbarGroup">
					<title><sgmltag>&lt;rich:toolbarGroup&gt;</sgmltag></title>
					<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richtoolbarGroup-richtoolbarGroup.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
					<para>
						The example shows how to locate a toolbar group to the right-hand side of the parent toolbar. It also demonstrates how item separators on the parent toolbar work with toolbar groups.
					</para>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/figu-Component_Reference-richtoolbarGroup-richtoolbarGroup.png" format="PNG" />
						</imageobject>
						<textobject>
							<para>
								A toolbar using icons. Two toolbar groups are located on the left-hand side of the toolbar and separated by a grid pattern. The third toolbar group is located to the right-hand side.
							</para>
						</textobject>
					</mediaobject>
				</example>
			</section>

			<section id="sect-Component_Reference-richtoolbarGroup-Reference_data">
				<title>Reference data</title>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>component-type</parameter>: <classname>org.richfaces.ToolbarGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-class</parameter>: <classname>org.richfaces.component.html.HtmlToolbarGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-family</parameter>: <classname>org.richfaces.ToolbarGroup</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>renderer-type</parameter>: <classname>org.richfaces.ToolbarGroupRenderer</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>tag-class</parameter>: <classname>org.richfaces.taglib.ToolbarGroupTag</classname>
						</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		
	</section>

</chapter>

