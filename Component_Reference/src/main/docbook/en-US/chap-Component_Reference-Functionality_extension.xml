<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="chap-Component_Reference-Functionality_extension">
	<title>Functionality extension</title>
	<para>
		Read this chapter for details on miscellaneous components that provide extended functionality to web applications.
	</para>
	
	<section id="sect-Component_Reference-Functionality_extension-richcomponentControl">
		<title><sgmltag>&lt;rich:componentControl&gt;</sgmltag></title>
		<para>
			The <sgmltag>&lt;rich:componentControl&gt;</sgmltag> behavior allows JavaScript API functions to be called on target components. The functions are called after defined events are triggered on the component to with the <sgmltag>&lt;rich:componentControl&gt;</sgmltag> behavior is attached. Initialization variants and activation events can be customized, and parameters can be passed to the target component.
		</para>
		
		<section id="sect-Component_Reference-richcomponentControl-Basic_usage">
			<title>Basic usage</title>
			<para>
				The <varname>operation</varname> attribute is required to attach JavaScript functions to the parent component, along with either the <varname>target</varname> or <varname>selector</varname> attributes. Use the <varname>operation</varname> attribute to specify the JavaScript API function to perform. Use the <varname>target</varname> attribute to define the <varname>id</varname> identifier of the target component, or use the <varname>selector</varname> attribute to define a number of target components through the use of valid jQuery selectors.
			</para>
			<para>
				Use the <varname>event</varname> attribute to specify the event that triggers the JavaScript API function call if it is different from the default triggering event for the parent component.
			</para>
			<example id="exam-Component_Reference-richcomponentControl-richcomponentControl_basic_usage">
				<title><sgmltag>&lt;rich:componentControl&gt;</sgmltag> basic usage</title>
				<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richcomponentControl-richcomponentControl_basic_usage.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
				<para>
					The example contains a single command button, which when clicked shows the modal panel with the identifier <literal>ccModalPanelID</literal>.
				</para>
			</example>
		</section>

		<!--
		<section id="sect-Component_Reference-richcomponentControl-Attaching_to_a_component">
			<title>Attaching to a component</title>
			<para>
				The <varname>attachTo</varname> attribute can be used to attach the event to a component other than the parent component. If no <varname>attachTo</varname> attribute is supplied, the <sgmltag>&lt;rich:componentControl&gt;</sgmltag> component's parent is used, as in <xref linkend="exam-Component_Reference-richcomponentControl-richcomponentControl_basic_usage" />.
			</para>
			<example id="exam-Component_Reference-richcomponentControl-Attaching_richcomponentControl_to_a_component">
				<title>Attaching <sgmltag>&lt;rich:componentControl&gt;</sgmltag> to a component</title>
				<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richcomponentControl-Attaching_richcomponentControl_to_a_component.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
				<para>
					In the example, the <literal>click</literal> event of the component with the identifier <literal>ccCalendarID</literal> will trigger the <literal>Expand</literal> operation for the component with the identifier <literal>doExpandCalendarID</literal>.
				</para>
			</example>
		</section>
		-->
		
		<section id="sect-Component_Reference-richcomponentControl-Passing_parameters_to_API_methods">
			<title>Passing parameters to API methods</title>
			<para>
				The operation can receive parameters through nested <sgmltag>&lt;f:param&gt;</sgmltag> elements.
			</para>
			<example id="exam-Component_Reference-richcomponentControl-Using_parameters">
				<title>Using parameters</title>
					<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richcomponentControl-Using_parameters-1.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
			</example>
			<para>
				To group multiple parameters for a function, use the <sgmltag>&lt;rich:hashParam&gt;</sgmltag> component to create a hash map. Refer to <xref linkend="sect-Component_Reference-Functionality_extension-richhashParam" /> for details.
			</para>
		</section>
		
		<section id="sect-Component_Reference-richcomponentControl-Reference_data">
			<title>Reference data</title>
			<itemizedlist>
				<listitem>
					<para>
						<parameter>client-behavior-renderer-type</parameter>: <classname>org.richfaces.behavior.ComponentControlBehavior</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>behavior-id</parameter>: <classname>org.richfaces.behavior.ComponentControlBehavior</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>handler-class</parameter>: <classname>org.richfaces.taglib.ComponentControlHandler</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>behavior-class</parameter>: <classname>org.richfaces.component.behavior.ComponentControlBehavior</classname>
					</para>
				</listitem>
				<listitem>
					<para>
						<parameter>client-behavior-renderer-class</parameter>: <classname>org.richfaces.renderkit.html.ToggleControlRenderer</classname>
					</para>
				</listitem>
			</itemizedlist>
		</section>

		<section id="sect-Component_Reference-Functionality_extension-richhashParam">
			<title><sgmltag>&lt;rich:hashParam&gt;</sgmltag></title>
			<para>
				The <sgmltag>&lt;rich:hashParam&gt;</sgmltag> component allows client-side parameters to be grouped into a hash map. The hash map can then be passed to the client JavaScript API functions of any RichFaces component.
			</para>

			<section id="sect-Component_Reference-richhashParam-Basic_usage">
				<title>Basic usage</title>
				<para>
					Nest parameter tags in the <sgmltag>&lt;rich:hashParam&gt;</sgmltag> component to group them in the hash map. The hash map itself can then be passed as a function parameter.
				</para>
				<example id="exam-Component_Reference-richhashParam-richhashParam">
					<title><sgmltag>&lt;rich:hashParam&gt;</sgmltag></title>
					<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richhashParam-richhashParam.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
					<para>
						The example illustrates the use of the <sgmltag>&lt;rich:hashParam&gt;</sgmltag> component to group multiple parameters into a hash map. The parameters are passed through to the <function>show</function> function pop-up panel with the <literal>popupPanel</literal> identifier.
					</para>
				</example>
			</section>
		
			<section id="sect-Component_Reference-richhashParam-Reference_data">
				<title>Reference data</title>
				<itemizedlist>
					<listitem>
						<para>
							<parameter>component-type</parameter>: <classname>org.richfaces.HashParam</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-class</parameter>: <classname>org.richfaces.component.UIHashParam</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>component-family</parameter>: <classname>org.richfaces.HashParam</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>renderer-type</parameter>: <classname>org.richfaces.HashParamRenderer</classname>
						</para>
					</listitem>
					<listitem>
						<para>
							<parameter>handler-class</parameter>: <classname>org.richfaces.view.facelets.HashParamTag</classname>
						</para>
					</listitem>
				</itemizedlist>
			</section>
		</section>
	</section>

	<!--
	<section id="sect-Component_Reference-Functionality_extension-richgmap">
		<title><sgmltag>&lt;rich:gmap&gt;</sgmltag></title>
		<para>
			Incomplete
		</para>
	</section>
	
	<section id="sect-Component_Reference-Functionality_extension-richhotkey">
		<title><sgmltag>&lt;rich:hotkey&gt;</sgmltag></title>
		<para>
			Incomplete
		</para>
	</section>
	
	<section id="sect-Component_Reference-Functionality_extension-richvirtualEarth">
		<title><sgmltag>&lt;rich:virtualEarth&gt;</sgmltag></title>
		<para>
			Incomplete
		</para>
	</section>
	-->

</chapter>

