<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="chap-Component_Reference-Functions">
	<title>Functions</title>
	<para>
		Read this chapter for details on special functions for use with particular components. Using JavaServer Faces Expression Language (<acronym>JSF</acronym> <acronym>EL</acronym>), these functions can be accessed through the <varname>data</varname> attribute of components. Refer to <xref linkend="sect-Component_Reference-Events_and_JavaScript_interactions-data" /> for details on the <varname>data</varname> attribute.
	</para>
	
	<section id="sect-Component_Reference-Functions-richclientId">
		<title><function>rich:clientId</function></title>
		<para>
			The <function>rich:clientId('id')</function> function returns the client identifier related to the passed component identifier (<code>'id'</code>). If the specified component identifier is not found, <literal>null</literal> is returned instead.
		</para>
	</section>
	
	<section id="sect-Component_Reference-Functions-richcomponent">
		<title><function>rich:component</function></title>
		<para>
			The <function>rich:component('id')</function> function is equivalent to the <code>RichFaces.$('clientId')</code> code. It returns the client object instance based on the passed server-side component identifier (<code>'id'</code>). If the specified component identifier is not found, <literal>null</literal> is returned instead. The function can be used to get an object from a component to call a JavaScript API function without using the <sgmltag>&lt;rich:componentControl&gt;</sgmltag> component.
		</para>
	</section>
	
	<section id="sect-Component_Reference-Functions-richelement">
		<title><function>rich:element</function></title>
		<para>
			The <function>rich:element('id')</function> function is a shortcut for the equivalent <code>document.getElementById(#{rich:clientId('id')})</code> code. It returns the element from the client, based on the passed server-side component identifier. If the specified component identifier is not found, <literal>null</literal> is returned instead.
		</para>
	</section>
	
	<section id="sect-Component_Reference-Functions-richfindComponent">
		<title><function>rich:findComponent</function></title>
		<para>
			The <function>rich:findComponent('id')</function> function returns the a UIComponent instance of the passed component identifier. If the specified component identifier is not found, <literal>null</literal> is returned instead.
		</para>
		<example id="exam-Component_Reference-richfindComponent-richfindComponent_example">
			<title><function>rich:findComponent</function> example</title>
			<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richfindComponent-richfindComponent_example.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
		</example>
	</section>
	
	<section id="sect-Component_Reference-Functions-richisUserInRole">
		<title><function>rich:isUserInRole</function></title>
		<para>
			The <function>rich:isUserInRole(Object)</function> function checks whether the logged-in user belongs to a certain user role, such as being an administrator. User roles are defined in the <filename>web.xml</filename> settings file.
		</para>
		<example id="exam-Component_Reference-richisUserInRole-richisUserInRole_example">
			<title><function>rich:isUserInRole</function> example</title>
			<para>
				The <function>rich:isUserInRole(Object)</function> function can be used in conjunction with the <varname>rendered</varname> attribute of a component to only display certain controls to authorized users.
			</para>
			<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/exam-Component_Reference-richisUserInRole-richisUserInRole_example.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
		</example>
	</section>

</chapter>

