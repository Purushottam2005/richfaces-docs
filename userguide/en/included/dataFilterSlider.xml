<?xml version='1.0' encoding='UTF-8'?>
<section>
  <section>
     <table>
	  <title>Component identification parameters </title>
      <tgroup cols="2">
	  <thead>
            <row>
                  <entry>Name</entry>
                  <entry>Value</entry>
            </row>
        </thead>
        <tbody>
          <row>
            <entry>component-type</entry>
            <entry>org.richfaces.dataFilterSlider</entry>
          </row>
          <row>
            <entry>component-class</entry>
            <entry>org.richfaces.component.html.HtmldataFilterSlider</entry>
          </row>
          <row>
            <entry>component-family</entry>
            <entry>org.richfaces.dataFilterSlider</entry>
          </row>
          <row>
            <entry>renderer-type</entry>
            <entry>org.richfaces.dataFilterSliderRenderer</entry>
		  </row>
		  <row>
			<entry>tag-class</entry>
            <entry>org.richfaces.taglib.dataFilterSliderTag</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
  <section>
    <title>Creating the Component with a Page Tag</title>
    <para>	To create the simplest variant on a page, use the following syntax: </para>
    <programlisting role="XML"><![CDATA[...
	    <rich:dataFilterSlider sliderListener="#{mybean.doSlide}"
                  startRange="0"
                  endRange="50000"
                  increment="10000"
                  handleValue="1"
        />
...
]]></programlisting>
  </section>
  <section>
    <title>Creating the Component Dynamically Using Java</title>
    <programlisting role="JAVA"><![CDATA[import org.richfaces.component.html.HtmldataFilterSlider; 	
...
HtmldataFilterSlider mySlider = new HtmldataFilterSlider();
...
]]></programlisting>
  </section>
  <section>
    <title>Details of Usage</title>
    <para>The <property>dataFilterSlider</property> component is bound to some UIData component using a
    <emphasis role="italic"><property>&quot;for&quot;</property></emphasis> attribute and 
    filters data in this table. </para>
     	<para><emphasis role="bold">Example:</emphasis></para>
    <programlisting role="XML"><![CDATA[...
	<rich:dataFilterSlider sliderListener="#{mybean.doSlide}"
                  startRange="0"
                  endRange="50000"
                  increment="10000"
                  handleValue="1"
	              for="carIndex"
                  forValRef="inventoryList.carInventory" 
                  filterBy="getMileage"
    />
...
    <h:dataTable id="carIndex"> 
                    ... 
    </h:dataTable>
...
]]></programlisting>
<para>In this example other two attributes are used for filtering:</para>
	<itemizedlist>
        <listitem>
         <emphasis role="italic"><property>&quot;forValRef&quot;</property></emphasis> is a string 
         which is used in a value attribute of the target UIData component. It&apos;s designed for 
         resetting the UIData component back to the original list provided by a backing bean.
        </listitem>
        <listitem>
         <emphasis role="italic"><property>&quot;filterBy&quot;</property></emphasis> is a getter of 
         an object member that is to be compared to a slider value. It&apos;s a value that is used in
          results filtering.
        </listitem>
      </itemizedlist>
<para><emphasis role="italic"><property>&quot;handleValue&quot;</property></emphasis> is an attribute
 for keeping the current handler position on the <property>dataFilterSlider</property> component.
  Based on the current value, appropriate values obtained from a getter method defined in 
  <emphasis role="italic"><property>&quot;filterBy&quot;</property></emphasis> are 
  filtered.</para>
<para>One more important attribute is a 
<emphasis role="italic"><property>&quot;storeResults&quot;</property></emphasis> one that allows the 
<property>dataFilterSlider</property> component to keep UIData target object in session.</para>
<para>If it&apos;s necessary the component submits a form on event of a handler state changing, use 
the <emphasis role="italic"><property>&quot;onSlide&quot;</property></emphasis> attribute 
(<emphasis role="italic"><property>&quot;onChange&quot;</property></emphasis> is its alias). When 
the attribute definition = true, submission on this event is defined.</para>
  </section>
</section>