<?xml version="1.0" encoding="UTF-8"?>
<section id="toolBar"><?dbhtml filename="toolBar.html" ?>
   <title>&lt;rich:toolBar&gt;</title>
   <sectioninfo>

      <keywordset>

         <keyword>toolBar</keyword>

      </keywordset>

   </sectioninfo>
   <section>
    
      <para>A horizontal bar with Action items on it that accepts any JSF components as children.</para>
    
      <figure>
        
         <title>Toolbar with action items</title>
    
    
         <mediaobject> 
        
            <imageobject>
            
               <imagedata fileref="images/toolBarMain.gif"/>
        
            </imageobject>
    
         </mediaobject>
    
      </figure>
    
   </section>
   <section>
    
      <title>Key Features</title>
    
      <itemizedlist>
        
         <listitem>Skinnable menu panel and child items</listitem>
        
         <listitem>Standard top menu bar that can be used in accordance with a menu component</listitem> 
        
         <listitem>Grouping bar content</listitem>
        
         <listitem>Easily place content on any side of a menu bar using predefined group layout</listitem>
        
         <listitem>Predefined separators for menu items and groups</listitem>
        
         <listitem>Any content inside</listitem>  
    
      </itemizedlist>

   </section>
   <table>
      <title>rich:toolBar attributes</title>
      <tgroup cols="2">
         <thead>
            <row>
               <entry>Attribute Name</entry>
               <entry>Description</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>binding</entry>
               <entry>The attribute takes a value-binding expression for a component property of
a backing bean</entry>
            </row>
            <row>
               <entry>contentClass</entry>
               <entry>A CSS style is to be applied to each element of tool bar content. 
    		Use this style, for example, to setup parameters of the font.</entry>
            </row>
            <row>
               <entry>contentStyle</entry>
               <entry>A CSS style is to be applied to each element of tool bar content.</entry>
            </row>
            <row>
               <entry>height</entry>
               <entry>A height of a bar in pixels. If a height is not defined,
    		a bar height depends of the "headerFontSize" skin parameter.</entry>
            </row>
            <row>
               <entry>id</entry>
               <entry>Every component may have a unique id that is automatically created if
            omitted</entry>
            </row>
            <row>
               <entry>itemSeparator</entry>
               <entry>A separator between items on a bar. Possible values
    		are none, line, square, disc and grid.</entry>
            </row>
            <row>
               <entry>rendered</entry>
               <entry>If "false", this component is rendered.</entry>
            </row>
            <row>
               <entry>separatorClass</entry>
               <entry>A CSS class to be applied to menu bar group separators.
    		Use this property, for example, to setup parameters of a font.</entry>
            </row>
            <row>
               <entry>style</entry>
               <entry>CSS style(s) is/are to be applied when this component is rendered</entry>
            </row>
            <row>
               <entry>styleClass</entry>
               <entry>Corresponds to the HTML class attribute</entry>
            </row>
            <row>
               <entry>width</entry>
               <entry>A width of a bar that can be defined in pixels or as percentage. The default value is 100%.</entry>
            </row>
         </tbody>
      </tgroup>
   </table>
   <sectioninfo>

      <keywordset>

         <keyword>bar</keyword>

         <keyword>rich:toolBar</keyword>

         <keyword>HtmlToolBar</keyword>

      </keywordset>

   </sectioninfo>
   <section>
     
      <table>
	  
         <title>Component identification parameters </title>
      
         <tgroup cols="2">
	  
            <thead>
            
               <row>
                  
                  <entry>Name</entry>
                  
                  <entry>Value</entry>
            
               </row>
        
            </thead>
        
            <tbody>
          
               <row>
            
                  <entry>component-type</entry>
            
                  <entry>org.richfaces.ToolBar</entry>
          
               </row>
          
               <row>
            
                  <entry>component-class</entry>
            
                  <entry>org.richfaces.component.html.HtmlToolBar</entry>
          
               </row>
          
               <row>
            
                  <entry>component-family</entry>
            
                  <entry>org.richfaces.ToolBar</entry>
          
               </row>
          
               <row>
            
                  <entry>renderer-type</entry>
            
                  <entry>org.richfaces.ToolBarRenderer</entry>
		  
               </row>
		  
               <row>
			
                  <entry>tag-class</entry>
            
                  <entry>org.richfaces.taglib.ToolBarTag</entry>
          
               </row>
        
            </tbody>
      
         </tgroup>
    
      </table>
  
   </section>
   <section>
    
      <title>Creating the Component with a Page Tag</title>
    
      <para>To create it on a page, use the following syntax: </para>
    
      <programlisting role="XML">&lt;rich:toolBar&gt;
		&lt;!--//...Set of action or other JSF components--&gt;
&lt;/rich:toolBar&gt;
</programlisting>
  
   </section>
   <section>
    
      <title>Creating the Component Dynamically Using Java</title>
    
      <programlisting role="JAVA">...
org.richfaces.component.html.HtmlToolBar myToolBar = new org.richfaces.component.html.HtmlToolBar();
...
</programlisting>
  
   </section>
   <section>
    
      <title>Details of Usage</title>
	
      <para>A <property>toolBar</property> is a wrapper component that facilitates creation of menu and
	 <property>tool bars</property>. All components defined inside are located on a stylized bar with possibility to group,
	  arrange on the both bar sides, and place predefined separators between them.</para>
    
      <para>Grouping and an input side definition is described for <property>toolBarGroup</property> that defines this 
    functionality.</para>
	
      <para>Separators are located between components with the help of the <emphasis role="italic">
            <property>"itemSeparator"</property>
         </emphasis> attribute 
	 with four predefined values:</para>
	  	
      <itemizedlist>
        
         <listitem>
          none
        </listitem>
        
         <listitem>
          line
        </listitem>
		
         <listitem>
		  square
		</listitem>
		
         <listitem>
		  disc
		</listitem>
      
      </itemizedlist>
	  
      <para>For example, when settting a separator of a disc type, the following result is produced:</para>
    
      <figure>
      
         <title>Toolbar with a "disc" separator</title>
    
	  
         <mediaobject> 
        
            <imageobject>
            
               <imagedata fileref="images/toolBar2.gif"/>
        
            </imageobject>
	  
         </mediaobject>
    
      </figure>
	  
      <para>Moreover, for <property>toolBar</property> style 
	  <emphasis role="italic">
            <property>"width"</property>
         </emphasis> and <emphasis role="italic">
            <property>"height"</property>
         </emphasis> attributes 
	  are placed above all.</para>
  
   </section>
   <section>
    
      <title>Look and Feel Customization</title>
    
      <para>For skinnability implementation the components use a <emphasis role="italic">
            <property>style class redefinition method</property>
         </emphasis>.</para>
    
      <para>Default style classes are mapped on <emphasis role="italic">
            <property>skin parameters</property>.</emphasis>
      </para>
	
      <para>To redefine appearance of all toolBars at once, there are two ways:</para>
        
      <itemizedlist>
        
         <listitem>to redefine corresponding skin parameters</listitem>
        
         <listitem>to add <emphasis role="italic">
               <property>style classes</property>
            </emphasis> used by the toolBar to your page stylesheets</listitem>
         
      </itemizedlist>
    
      <table>
	  
         <title>Skin parameters redefinition</title>
      
         <tgroup cols="2">
	  
            <thead>
            
               <row>
                  
                  <entry>Skin parameters for the toolbar component</entry>
                  
                  <entry>Corresponding CSS parameters</entry>
            
               </row>
        
            </thead>
        
            <tbody>
          
               <row>
            
                  <entry>tableBorderColor</entry>
            
                  <entry>border-color</entry>
          
               </row>
		   
               <row>
            
                  <entry>headerBackgroundColor</entry>
            
                  <entry>background-color</entry>
          
               </row>
        
            </tbody>
      
         </tgroup>
    
      </table>
	
   </section>
   <section>
    
      <title>Definition custom style classes</title>
	
      <para>On generating, the component substitutes the default class rich-toolbar-exterior
	 into <emphasis role="italic">
            <property>style class</property>
         </emphasis>
	 of a generated component, i.e. to redefine at once all <property>toolBars</property> appearance 
	 on a page, redefine this class in your CSS.</para>
	
      <para>The component also has the standard attributes <emphasis role="italic">
            <property>"style"</property>
         </emphasis> and 
	<emphasis role="italic">
            <property>"styleClass"</property>
         </emphasis> that could redefine an
	 appearance of a particular component variants.</para>
   
   </section>
</section>