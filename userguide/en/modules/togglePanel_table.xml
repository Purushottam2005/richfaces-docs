<?xml version="1.0" encoding="UTF-8"?>
<section id="togglePanel"><?dbhtml filename="togglePanel.html" ?>
   <title>&lt;rich:togglePanel&gt;</title>
   <sectioninfo>

      <keywordset>

         <keyword>togglePanel</keyword>

      </keywordset>

   </sectioninfo>
   <section>
    
      <para>A wrapper component with named facets, where every facet is shown after activation of
    the corresponding <property>toggleControl</property>
    (the other is hidden).</para>
    
      <figure>
        
         <title>TogglePanel component</title>
    
         <mediaobject> 
        
            <imageobject>
            
               <imagedata fileref="images/togglePanel.gif"/>
        
            </imageobject>
    
         </mediaobject>
    
      </figure>
    
   </section>
   <section>
    
      <title>Key Features</title>
    
      <itemizedlist>
        
         <listitem>Support for any content inside</listitem>
        
         <listitem>Three modes of facets switching
        <itemizedlist>
        
               <listitem>Server</listitem>
        
               <listitem>Client</listitem>
        
               <listitem>Ajax</listitem>
        
            </itemizedlist>
        
         </listitem>   
        
         <listitem>Controls for <property>togglePanel</property> can be everywhere in layout</listitem>
    
      </itemizedlist>

   </section>
   <table>
      <title>rich:togglePanel attributes</title>
      <tgroup cols="2">
         <thead>
            <row>
               <entry>Attribute Name</entry>
               <entry>Description</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>binding</entry>
               <entry>The attribute takes a value-binding expression for a component property of
a backing bean</entry>
            </row>
            <row>
               <entry>converter</entry>
               <entry>converter</entry>
            </row>
            <row>
               <entry>id</entry>
               <entry>Every component may have a unique id that is automatically created if
            omitted</entry>
            </row>
            <row>
               <entry>immediate</entry>
               <entry>immediate</entry>
            </row>
            <row>
               <entry>initialState</entry>
               <entry>It contains a name of the first active facet</entry>
            </row>
            <row>
               <entry>rendered</entry>
               <entry>If "false", this component is rendered.</entry>
            </row>
            <row>
               <entry>required</entry>
               <entry>required</entry>
            </row>
            <row>
               <entry>stateOrder</entry>
               <entry>Names of the facets in the switching order. If
				ToggleControl doesn't contain information about a next facet to
				be shown it is switched corresponding to this
				attribute</entry>
            </row>
            <row>
               <entry>switchType</entry>
               <entry>Facets switch algorithm: "client", "server"(default), "ajax".</entry>
            </row>
            <row>
               <entry>valid</entry>
               <entry>valid</entry>
            </row>
            <row>
               <entry>validator</entry>
               <entry>validator</entry>
            </row>
            <row>
               <entry>value</entry>
               <entry>The initial value to set when rendered for the first time.
				It contains information about an active facet</entry>
            </row>
            <row>
               <entry>valueChangeListener</entry>
               <entry>valueChangeListener</entry>
            </row>
         </tbody>
      </tgroup>
   </table>
   <sectioninfo>

      <keywordset>

         <keyword>facet</keyword>

         <keyword>rich:togglePanel</keyword>

         <keyword>HtmlTogglePanel</keyword>

      </keywordset>

   </sectioninfo>
   <section>
     
      <table>
	  
         <title>Component identification parameters</title>
      
         <tgroup cols="2">
	  
            <thead>
            
               <row>
                  
                  <entry>Name</entry>
                  
                  <entry>Value</entry>
            
               </row>
        
            </thead>
        
            <tbody>
          
               <row>
            
                  <entry>component-type</entry>
            
                  <entry>org.richfaces.TogglePanel</entry>
          
               </row>
          
               <row>
            
                  <entry>component-class</entry>
            
                  <entry>org.richfaces.component.html.HtmlTogglePanel</entry>
          
               </row>
          
               <row>
            
                  <entry>component-family</entry>
            
                  <entry>org.richfaces.TogglePanel</entry>
          
               </row>
          
               <row>
            
                  <entry>renderer-type</entry>
            
                  <entry>org.richfaces.TogglePanelRenderer</entry>
		  
               </row>
		  
               <row>
			
                  <entry>tag-class</entry>
            
                  <entry>org.richfaces.taglib.TogglePanelTag</entry>
          
               </row>
        
            </tbody>
      
         </tgroup>
    
      </table>
  
   </section>
   <section>
    
      <title>Creating the Component with a Page Tag</title>
    
      <para>To create it on a page, use the following syntax: </para>
    
      <programlisting role="XML">...
		&lt;rich:togglePanel&gt;
			&lt;f:facet name="first"&gt;
				...
			&lt;/f:facet&gt;
			&lt;f:facet name="second"&gt;
				...
			&lt;/f:facet&gt;
			...
		&lt;/rich:togglePanel&gt;
		...
		&lt;!--//Set of the toggleControls somewhere on the page.--&gt;
...
</programlisting>
  
   </section>
   <section>
    
      <title>Creating the Component Dynamically Using Java</title>
    
      <programlisting role="JAVA">...
org.richfaces.component.html.HtmlTogglePanel myPanel = new org.richfaces.component.html.HtmlTogglePanel();
...
</programlisting>
  
   </section>
   <section>
    
      <title>Details of Usage</title>
    
      <para>As it was mentioned above, <property>togglePanel</property> splits content into named 
    facets that rendered and processed when a click performed on controls linked to this <property>togglePanel</property> 
    (either switched on the client or send requests on the server for switching).</para>

      <para>The initial component state is defined with <emphasis role="italic">
            <property>"initialState"</property>
         </emphasis> attribute, where a facet name that is shown at first is defined.</para>

      <note>
         <title>Note:</title>
It's also  possible to define an <property>"empty"</property> facet to implement the functionality as 
drop-down panels have and make the facet active when no content is required to be rendered.</note>

      <para>Switching mode could be defined with the <emphasis role="italic">
            <property>"switchType"</property>
         </emphasis> attribute with three possible
 parameters:</para>

      <itemizedlist>
        
         <listitem>
          Server (DEFAULT)<para>The common submission is performed around <property>togglePanel</property> and a page is completely rendered on a called panel. Only one at a time panel is uploaded onto the client side.</para>
        
         </listitem>
        
         <listitem>
          Ajax<para>AJAX form submission is performed around the panel, content of the called panel is
           uploaded on an AJAX request and additionally specified elements in the <emphasis role="italic">
                  <property>"reRender"</property>
               </emphasis> attribute are rendered. Only one at a time panel is uploaded on the client side.</para>
		 
         </listitem>
		 
         <listitem>
          Client<para>
		  All panels are uploaded on the client side. The switching from the active to the hidden panel
		   is performed with client JavaScript.</para>
        
         </listitem>
      
      </itemizedlist>

      <para>"Facets" switching order could be defined on
 the side of  <emphasis role="bold">
            <property>&lt;rich:toggleControl&gt;</property>
         </emphasis> component or on the panel. On the side of the togglePanel it's possible to define facets switching order with the <emphasis role="italic">
            <property>"stateOrder"</property>
         </emphasis> attribute. The facets names are enumerated in 
  such an order that they are rendered when a control is clicked, as it's not defined where 
  to switch beforehand.</para>

      <programlisting role="XML">&lt;rich:togglePanel id="panel"
			initialState="panelB" switchType="client"
			stateOrder="panelA,panelB,panelC"&gt;
			&lt;f:facet name="panelA"&gt;
				...
			&lt;/f:facet&gt;
			&lt;f:facet name="panelB"&gt;
				...
			&lt;/f:facet&gt;
			&lt;f:facet name="panelC"&gt;
				...
			&lt;/f:facet&gt;
&lt;/rich:togglePanel&gt; 
&lt;rich:toggleControl for="panel" value="Switch"/&gt;
</programlisting>

      <para>The example shows a <property>togglePanel</property> initial state when the second facet (panelB) is rendered and successive switching from the first to the second happens.</para>
	
   </section>
   <section>
	
      <title>Look and Feel Customization</title>
	
      <para>The component doesn't have its own representation rendering only content of its facets, thus all look and feel is set only for content.</para>
	
   </section>
</section>