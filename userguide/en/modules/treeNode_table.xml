<?xml version="1.0" encoding="UTF-8"?>
<section id="treeNode"><?dbhtml filename="treeNode.html" ?>
   <title>&lt;rich:treeNode&gt;</title>
   <sectioninfo>

      <keywordset>

         <keyword>treeNode</keyword>

      </keywordset>

   </sectioninfo>
   <section>
    
      <para>A component is used for designing templates for nodes definition.</para>
    
      <figure>
    
         <title>TreeNode component</title>
    
         <mediaobject> 
        
            <imageobject>
            
               <imagedata fileref="images/tree1.gif"/>
        
            </imageobject>
    
         </mediaobject>
    
      </figure>
    
   </section>
   <section>
    
      <title>Key Features</title>
    
   </section>
   <table>
      <title>rich:treeNode attributes</title>
      <tgroup cols="2">
         <thead>
            <row>
               <entry>Attribute Name</entry>
               <entry>Description</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>acceptedTypes</entry>
               <entry>List of drag types to be processd by the current drop zone.</entry>
            </row>
            <row>
               <entry>ajaxSubmitSelection</entry>
               <entry>An algorithm of AJAX request submission. "inherit", "true", "false" values are possible</entry>
            </row>
            <row>
               <entry>binding</entry>
               <entry>binding</entry>
            </row>
            <row>
               <entry>changeExpandListener</entry>
               <entry>changeExpandListener</entry>
            </row>
            <row>
               <entry>dragIndicator</entry>
               <entry>Id of the dragIndicator component used as drag operation cursor.</entry>
            </row>
            <row>
               <entry>dragListener</entry>
               <entry>dragListener</entry>
            </row>
            <row>
               <entry>dragType</entry>
               <entry>Key of a drag object. It's used to define a necessity of processing the current dragged element on the drop zone side</entry>
            </row>
            <row>
               <entry>dragValue</entry>
               <entry>Data to be sent to the drop zone after a drop event.</entry>
            </row>
            <row>
               <entry>dropListener</entry>
               <entry>dropListener</entry>
            </row>
            <row>
               <entry>dropValue</entry>
               <entry>Data to be processed after a drop event.</entry>
            </row>
            <row>
               <entry>highlightedClass</entry>
               <entry>Corresponds to the HTML class attribute. Applied to highlighted node</entry>
            </row>
            <row>
               <entry>icon</entry>
               <entry>The icon for node</entry>
            </row>
            <row>
               <entry>iconCollapsed</entry>
               <entry>The icon for collapsed node</entry>
            </row>
            <row>
               <entry>iconExpanded</entry>
               <entry>The icon for expanded node</entry>
            </row>
            <row>
               <entry>iconLeaf</entry>
               <entry>iconLeaf</entry>
            </row>
            <row>
               <entry>id</entry>
               <entry>id</entry>
            </row>
            <row>
               <entry>nodeClass</entry>
               <entry>Name of node CSS class</entry>
            </row>
            <row>
               <entry>nodeSelectListener</entry>
               <entry>nodeSelectListener</entry>
            </row>
            <row>
               <entry>oncontextmenu</entry>
               <entry>JavaScript handler to be called on right click.
		   Returning false prevents default browser context menu from being displayed</entry>
            </row>
            <row>
               <entry>ondragend</entry>
               <entry>A JavaScript event handler called after a drag operation.</entry>
            </row>
            <row>
               <entry>ondragenter</entry>
               <entry>A JavaScript event handler called on enter draggable object to zone.</entry>
            </row>
            <row>
               <entry>ondragexit</entry>
               <entry>A JavaScript event handler called after a drag object leaves zone.</entry>
            </row>
            <row>
               <entry>ondragstart</entry>
               <entry>A JavaScript event handler called before drag object.</entry>
            </row>
            <row>
               <entry>ondrop</entry>
               <entry>It's an event that is called when something is dropped on a drop zone</entry>
            </row>
            <row>
               <entry>ondropend</entry>
               <entry>A Javascript handler for event fired on a drop even the drop for a given type is not available</entry>
            </row>
            <row>
               <entry>rendered</entry>
               <entry>rendered</entry>
            </row>
            <row>
               <entry>reRender</entry>
               <entry>Id[s] (in format of call  UIComopnent.findComponent()) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Ids, or EL Expression  with array or Collection</entry>
            </row>
            <row>
               <entry>selectedClass</entry>
               <entry>Corresponds to the HTML class attribute. Applied to selected node</entry>
            </row>
            <row>
               <entry>type</entry>
               <entry>A node type.</entry>
            </row>
            <row>
               <entry>typeMapping</entry>
               <entry>Map between a draggable type and an indicator name on zone. it's defined with the pair (drag type:indicator name))</entry>
            </row>
         </tbody>
      </tgroup>
   </table>
   <sectioninfo>

      <keywordset>

         <keyword>node</keyword>

         <keyword>rich:treeNode</keyword>

         <keyword>HtmlTreeNode</keyword>

      </keywordset>

   </sectioninfo>
   <section>
     
      <table>
	  
         <title>Component identification parameters </title>
      
         <tgroup cols="2">
	  
            <thead>
            
               <row>
                  
                  <entry>Name</entry>
                  
                  <entry>Value</entry>
            
               </row>
        
            </thead>
        
            <tbody>
          
               <row>
            
                  <entry>component-type</entry>
            
                  <entry>org.richfaces.TreeNode</entry>
          
               </row>
          
               <row>
            
                  <entry>component-class</entry>
            
                  <entry>org.richfaces.component.html.HtmlTreeNode</entry>
          
               </row>
          
               <row>
            
                  <entry>component-family</entry>
            
                  <entry>org.richfaces.TreeNode</entry>
          
               </row>
          
               <row>
            
                  <entry>renderer-type</entry>
            
                  <entry>org.richfaces.TreeNodeRenderer</entry>
		  
               </row>
		  
               <row>
			
                  <entry>tag-class</entry>
            
                  <entry>org.richfaces.taglib.TreeNodeTag</entry>
          
               </row>
        
            </tbody>
      
         </tgroup>
    
      </table>
  
   </section>
   <section>
    
      <title>Creating the Component with a Page Tag</title>
    
      <para>To create it on a page, use the following syntax: </para>
    
      <programlisting role="XML">...
	&lt;rich:tree ... faceNode="simpleNode"&gt;
	  &lt;rich:treeNode type="simpleNode"&gt;
	  &lt;!--Tree node data displaying template--&gt;
      &lt;/rich:treeNode&gt;
	&lt;/rich:tree&gt;
...
</programlisting>
  
   </section>
   <section>
    
      <title>Dynamical Creation from Java Code</title>
    
      <programlisting role="JAVA">...
org.richfaces.component.html.HtmlTreeNode myPanel = new org.richfaces.component.html.HtmlTreeNode();
...
</programlisting>
  
   </section>
   <section>
    
      <title>Details of Usage</title>
    
   </section>
   <section>
    
      <title>Look and Feel Customization</title>
    
      <para>As it has been mentioned above, <property>treeNode</property> defines a template for nodes
     rendering in a tree. Thus, during XML document rendering (a web.xml application) as a tree, the 
     following nodes output (passed via var="data" on a tree) happens:</para>
     
      <programlisting role="XML">
&lt;rich:tree ... faceNode="simpleNode" ... value="#{bean.data}" var="data"&gt;
  &lt;rich:treeNode type="simpleNode"&gt;
  &lt;h:outputText value="context-param:"/&gt;
  &lt;h:inputText value="#{data.name}"/&gt;
  &lt;/rich:treeNode&gt;
&lt;/rich:tree &gt;
</programlisting>

      <figure>
    
         <title>Nodes output</title>
    
         <mediaobject> 
        
            <imageobject>
            
               <imagedata fileref="images/tree2.gif"/>
        
            </imageobject>
    
         </mediaobject>
    
      </figure>
    
      <para>Hence, outputText outputs the "context-param" string and then the input is output for 
    the data.name element of this node.</para>
    
      <para>Different nodes for rendering could be defined depending on some conditions on the tree level. 
    Each condition represents some rendering template. To get more information on various <property>treeNodes</property> 
    definition for nodes, 
    <ulink url="tree.html">see the tree component chapter</ulink>.</para>
    
      <para>Switching between expanded/collapsed modes is also managed on the tree level and defined
     in <ulink url="tree.html">the corresponding section</ulink>.</para>
     
      <para>Default nodes of the tree level as well as ones defined with the <property>treeNodes</property> component could 
     send AJAX requests when selected with the mouse, it's managed with the 
     <emphasis role="italic">
            <property>"ajaxSubmitSelection"</property>
         </emphasis> attribute
      (true/false).</para>
      
   </section>
   <section>
      
      <title>Built-in Drag and Drop</title>
      
      <para>The main information on Drag and Drop operations is given in 
      <ulink url="tree.html">the corresponding paragraph</ulink> of 
      the <property>tree</property> component chapter. It's only necessary to mention that each node could also be a Drag
       element as well as a Drop container, i.e. the container and the element have all attributes, 
       listeners and ways of behavior similar to the ones of the <emphasis role="bold">
            <property>&lt;rich:draggable&gt;</property>
         </emphasis> and <emphasis role="bold">
            <property>&lt;rich:dropZone&gt;</property>
         </emphasis> components
        simultaneously.</para>
   </section>
   <section>
        
      <title>Events Handling</title>
        
      <para>Just as Drag and Drop operations it corresponds to the one described on 
        <ulink url="tree.html">the tree component level</ulink> for a default Node.</para>
        
   </section>
   <section>
        
      <title>Look and Feel Customization</title>
        
      <para>For skinnability implementation the components use a <emphasis role="italic">
            <property>style class redefinition method</property>
         </emphasis>.</para>
    
      <para>Default style classes are mapped on <emphasis role="italic">
            <property>skin parameters</property>.</emphasis>
      </para>
	
      <para>To redefine appearance of all treeNodes at once, there are two ways:</para>
        
      <itemizedlist>
        
         <listitem>to redefine corresponding skin parameters</listitem>
        
         <listitem>to add <emphasis role="italic">
               <property>style classes</property>
            </emphasis> used by the treeNode to your page stylesheets</listitem>
         
      </itemizedlist>
        
   </section>
   <section>
        
      <title>Skin parameters redefinition:</title>
        
      <table>
  
         <title>Default skins for treeNode element</title>
      
         <tgroup cols="2">
	  
            <thead>
            
               <row>
              
                  <entry>Default skins for treeNode element</entry>
                  
                  <entry>Properties corresponding to CSS parameter</entry>
            
               </row>
        
            </thead>
        
            <tbody>
          
               <row>
            
                  <entry>panelTextColor</entry>
            
                  <entry>color</entry>
          
               </row>
          
               <row>
            
                  <entry>preferableDataSizeFont	</entry>
            
                  <entry>font-size</entry>
          
               </row>
          
               <row>
          
                  <entry>preferableDataFamilyFont</entry>
          
                  <entry>font-family</entry>
          
               </row>
        
            </tbody>
      
         </tgroup>
    
      </table>
    
      <table>
  
         <title>Skin parameters for selected Node element</title>
      
         <tgroup cols="2">
	  
            <thead>
            
               <row>
              
                  <entry>Skin parameters for selected Node element</entry>
                  
                  <entry>Properties corresponding to CSS parameter</entry>
            
               </row>
        
            </thead>
        
            <tbody>
          
               <row>
            
                  <entry>headerBackgroundColor</entry>
            
                  <entry>background-color</entry>
          
               </row>
          
               <row>
            
                  <entry>headerBackgroundColor</entry>
            
                  <entry>background-color</entry>
          
               </row>
          
               <row>
          
                  <entry>headTextColor</entry>
          
                  <entry>color</entry>
          
               </row>
        
            </tbody>
      
         </tgroup>
    
      </table>
    
      <table>
  
         <title>Skin parameters for mouseovered  Node element</title>
      
         <tgroup cols="2">
	  
            <thead>
            
               <row>
              
                  <entry>Skin parameters for mouseovered  Node element</entry>
                  
                  <entry>Properties corresponding to CSS parameter</entry>
            
               </row>
        
            </thead>
        
            <tbody>
          
               <row>
            
                  <entry>selectControlColor</entry>
            
                  <entry>color</entry>
          
               </row>
        
            </tbody>
      
         </tgroup>
    
      </table>
    
      <para>Hence, to change look and fell of all <property>treeNodes</property> components on an application, change these
     parameters values.</para>	
     
   </section>
   <section>
     
      <title>Definition custom style classes:</title>
     
      <para>The following classes are applied to a node element in three states: default, marked,
      mouseovered:</para>
      
      <itemizedlist>
        
         <listitem>rich-tree-node</listitem>
        
         <listitem>rich-tree-node-selected</listitem>
        
         <listitem>rich-tree-node-highlighted</listitem>
        
      </itemizedlist>
        
      <para>Hence, in order to change an appearance of all <property>treeNodes</property> on a page,
         declare and customize the above-mentioned classes in your CSS.</para>
         
      <para>It is also possible to change look and feel of specific <property>treeNodes</property>
         with the help of defining for them 
         <emphasis role="italic">
            <property>"selectedClass"</property>
         </emphasis>
          and <emphasis role="italic">
            <property>"highlightedClass"</property>
         </emphasis>
           attributes by their specific classes.</para>
     
   </section>
</section>