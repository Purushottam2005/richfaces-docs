<?xml version="1.0" encoding="UTF-8"?>
<section>
    <sectioninfo>
        <keywordset>
            <keyword>rich:listShuttle</keyword>
            <keyword>listShuttle</keyword>
        </keywordset>
    </sectioninfo>
    <section>
        <title>Creating the Component with a Page Tag</title>
        <para>Here is a simple example as it could be used on a page: </para>
        <para>
            <emphasis role="bold">Example:</emphasis>
        </para>
        <programlisting role="XML"><![CDATA[...
<rich:listShuttle value="#{bean.list}" var="list" selection="#{value.resultList}">
        <f:facet name=header>
             <h:outputText value="Header1"/>
        </f:facet>
        <rich:column>
            <h:outputText value="#{list.text}"> 
        </rich:column>
<rich:listShuttle>
...]]></programlisting>
    </section>
    <section>
        <title>Creating the Component Dynamically Using Java</title>
        <para>
            <emphasis role="bold">Example:</emphasis>
        </para>
        <programlisting role="JAVA"><![CDATA[import org.richfaces.component.html.listShuttle;
...	
HtmllistShuttle mylistShuttle = new HtmllistShuttle();
...]]></programlisting>
    </section>
    <section>
        <title>Details of Usage</title>
        <para>The <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> component consists of the following parts: <itemizedlist>
                <listitem>two <property>item lists</property> (source and target). List consists of items; each item has
                    three different representations: common, selected, active</listitem>
                <listitem>optional <property>caption</property>, <property>header</property> (sorted and non-sorted), <property>footer</property> elements</listitem>
                <listitem><property>copy/moving controls set</property>, a set of controls, which performs moving/copying
                    items between lists</listitem>
                <listitem><property>optional ordering controls set</property>, a set of controls that performs
                reordering</listitem>
            </itemizedlist>
        </para>
        <para>The <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> component provides to use <emphasis>
                <property>&quot;source&quot;</property>
            </emphasis> and <emphasis>
                <property>&quot;target&quot;</property>
            </emphasis> facets. It is possible to use the facets only together defined. In case the
            facets definition skipped both lists contain the columns defined nested to listShuttle
            component.</para>
        <para>Here is a simple example as it could be used on a page.</para>
        <para>
            <emphasis role="bold">Example:</emphasis>
        </para>
        <programlisting role="XML"><![CDATA[...
<rich:listShuttle sourceValue="#{bean.list}" var="list" value="#{value.resultList}">
        <f:facet name="source">
            <rich:column>
                <h:outputText value="#{list.text}"/> 
            </rich:column>
        </f:facet>
        <f:facet name="target">
            <rich:column>
                <h:outputText value="#{list.text}"/> 
            </rich:column>
            <rich:column>
                <h:outputText value="#{list.description}"/> 
            </rich:column>
        </f:facet>
<rich:listShuttle>
...]]></programlisting>
        <!-- ADD SCREESHOT-->
        <para>Captions could be added to a list only after it was defined as a <emphasis>
                <property>&quot;sourceCaption&quot;</property>
            </emphasis> and <emphasis>
                <property>&quot;targetCaption&quot;</property>
            </emphasis> named facets inside the component or defined with the <emphasis>
                <property>&quot;sourceCaptionLabel&quot;</property>
            </emphasis> and <emphasis>
                <property>&quot;targetCaptionLabel&quot;</property>
            </emphasis> attribute.</para>
        <!-- ordering control set-->
        <para>The <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> component provides the possibility to use <property>ordering controls
            set</property>, which performs reordering in the target item list. Every control has
            possibility to be disabled. </para>
        <para>
            <emphasis>
                <property>&quot;topControl&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;topControlDisabled&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;bottomControl&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;bottomControlDisabled&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;upControl&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;upControlDisabled&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;downControl&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;downControlDisabled&quot; </property>
            </emphasis> facets are used to replaces the default control with facets content. </para>
        <para>
            <emphasis role="bold">Example:</emphasis>
        </para>
        <programlisting role="XML"><![CDATA[...
<rich:orderingList value="#{demoBean.items}" var="item" controlType="button">
        <f:facet name="topControl">
            <h:outputText value="Move to top">
        </f:facet>
            <f:facet name="upControl">
            <h:outputText value="Move up">
        </f:facet>
            <f:facet name="downControl">
            <h:outputText value="Move down">
        </f:facet>
            <f:facet name="bottomControl">
            <h:outputText value="Move to bottom">
        </f:facet>
<rich:orderingList>
...
]]></programlisting>
        <!-- copy/move control set -->
        <para>The <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis>component also provides 4 predefined controls in <property> move/copy
                controls set</property> for moving or copying items between source and target lists.
            Every control has possibility to be disabled. </para>
        <para>
            <emphasis>
                <property>&quot;copyCotrol&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;copy_disabled&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;removeControl&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;remove_disabled&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;copyAllControl&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;copyAll_disabled&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;removeAllControl&quot; </property>
            </emphasis>, <emphasis>
                <property>&quot;removeAll_disabled&quot; </property>
            </emphasis> facets are used to replaces the default control with facets content. </para>
        <!-- attributes -->
        <para> The 
            <emphasis><property>&quot;sourceValue&quot;
            </property></emphasis> attribute defines the collection to be shown in source list.</para>
        <para>The 
            <emphasis><property>&quot;value&quot;
            </property></emphasis> attribute defines the collection to store the value from target list.</para>
        <para> The 
            <emphasis><property>&quot;var&quot;
            </property></emphasis> could be shared between both collections to defined lists on the page.</para>
        <para>Controls rendering is based on the
            <emphasis><property>&quot;controlsType&quot;
            </property></emphasis> attribute. Possible types are <property>button</property> and <property>none</property>.</para> The position of the
            <property>ordering controls set</property> relatively to list should be customized with 
        <emphasis><property>&quot;orderControlsVerticalAlign&quot;
        </property></emphasis> attribute. The position of the <property>move/copy controls set</property>
        relatively to lists should be customized with 
        <emphasis><property>&quot;moveControlsVerticalAlign&quot;
        </property></emphasis> attribute. 
        
        <!-- template -->
        
        <para>The <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> component provides the possibility to be customized using templating. The
            customization could be performed by layout definition nested to component.</para>
        <para>10 elements could be provided to be defined inside template (all standard controls
            should also possible to use inside): {sourceList}, {targetList}, {CopyControl}, {removeCotrol},
            {copyAllControl}, {removeAllControl}, {topcontrol}, {bottomControl}, {downCotrol}, {upControl}.</para>
        <para>The markup defined in the initial picture could be defined as in the following
            example.</para>
        <para>
            <emphasis role="bold">Example:</emphasis>
        </para>
        <programlisting role="XML"><![CDATA[...
<rich:listShuttle>
...
		<h:panelGrid columns="4">
			<h:outputText value="{sourceList}"/>
			<h:panelGroup>
				<h:outputText value="{copyAllControl}"/>
				<h:outputText value="{copyControl}"/>
				<h:outputText value="{removeControl}"/>
				<h:outputText value="{removeAllControl}"/>
			</h:panelGroup>
			<h:outputText value="targetList"/>
			<h:panelGroup>
				<h:outputText value="{topControl}"/>
				<h:outputText value="{upControl}"/>
				<h:outputText value="{downControl}"/>
				<h:outputText value="{bottomControl}"/>
			</h:panelGroup>
		</h:panelGrid>
	</rich:listShuttle>
...
]]></programlisting>
        <table>
            <title>Keyboard usage for elements selection</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Keys and combinations </entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <!--Sorting API -->
                    <row>
                        <entry>CTRL+click</entry>
                        <entry>Described in selection behaviour requirement</entry>
                    </row>
                    <row>
                        <entry>SHIFT+click</entry>
                        <entry>Described in selection behaviour requirement</entry>
                    </row>
                    <row>
                        <entry>CTRL+A</entry>
                        <entry>Selects all elements inside the list if some active element is
                            already present in a list</entry>
                    </row>
                    <row>
                        <entry>Space</entry>
                        <entry>Inverts selection on the active element</entry>
                    </row>
                    <row>
                        <entry>Up, Down arrows</entry>
                        <entry>Change the active element to the next or previous in a list and make
                            it the only selected. Scroll should follow the selection to keep it
                            visible</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <table>
            <title>Keyboard usage for elements reordering</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Keys and combinations </entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <!--Sorting API -->
                    <row>
                        <entry>Home</entry>
                        <entry>Moves selected set to the top of a list</entry>
                    </row>
                    <row>
                        <entry>End</entry>
                        <entry>Moves selected set to the bottomof a list</entry>
                    </row>
                    <row>
                        <entry>CTRL+Up arrow</entry>
                        <entry>Moves selected item to one position upper</entry>
                    </row>
                    <row>
                        <entry>CTRL+Down arrow</entry>
                        <entry>Moves selected item to one position lower</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
    <section>
        <title>JavaScript API</title>
        <para> Controls are accessible for developer on client-side using controls attribute of
            JavaScript component instance. The value of the attribute is an associative array of
            controls keyed by the following strings: <property>top</property>, <property>up</property>, <property>down</property>, <property>bottom</property>.</para>
        <table>
            <title>JavaScript API</title>
            <tgroup cols="3">
                <thead>
                    <row>
                        <entry>Function</entry>
                        <entry>Description</entry>
                        <entry>Element</entry>
                    </row>
                </thead>
                <tbody>
                    <!--Sorting API -->
                    <row>
                        <entry>doSortAscending()</entry>
                        <entry>Sort items in the list ascending</entry>
                        <entry>Component</entry>
                    </row>
                    <row>
                        <entry>doSortDescending()</entry>
                        <entry>Sort items in the list descending</entry>
                        <entry>Component</entry>
                    </row>
                    <row>
                        <entry>doSort()</entry>
                        <entry>Invert current sorting</entry>
                        <entry>Component</entry>
                    </row>
                    <!--Controls common API -->
                    <row>
                        <entry>doHide()</entry>
                        <entry>Hide ordering control</entry>
                        <entry>Any Ordering control</entry>
                    </row>
                    <row>
                        <entry>doShow()</entry>
                        <entry>Show ordering control</entry>
                        <entry>Any Ordering control</entry>
                    </row>
                    <row>
                        <entry>isShown()</entry>
                        <entry>Check if current control is shown</entry>
                        <entry>Any Ordering control</entry>
                    </row>
                    <row>
                        <entry>doEnable()</entry>
                        <entry>Enable ordering control</entry>
                        <entry>Any Ordering control</entry>
                    </row>
                    <row>
                        <entry>doDisable()</entry>
                        <entry>Disable ordering control</entry>
                        <entry>Any Ordering control</entry>
                    </row>
                    <row>
                        <entry>isEnabled()</entry>
                        <entry>Check if current control is enabled</entry>
                        <entry>Any Ordering control</entry>
                    </row>
                    <!--List managing API -->
                    <row>
                        <entry>moveUp()</entry>
                        <entry>Move up selected item in the list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>moveDown()</entry>
                        <entry>Move down selected item in the list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>moveTop()</entry>
                        <entry>Move top selected item in the list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>moveBottom()</entry>
                        <entry>Move bottom selected item in the list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>copy()</entry>
                        <entry>Copy selected item from the source list to the target list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>remove()</entry>
                        <entry>Remove selected item from the target list to the source list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>copyAll()</entry>
                        <entry>Copy all items from the source list to the target list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>removeAll()</entry>
                        <entry>Remove all items from the target list to the source list</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>getSelection()</entry>
                        <entry>Return currently selected item</entry>
                        <entry>Any Item</entry>
                    </row>
                    <row>
                        <entry>getItems()</entry>
                        <entry>Return the collection of all items</entry>
                        <entry>Any Item</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
    <section>
        <title>Look-and-Feel Customization</title>
        <para>For skinnability implementation, the components use a <emphasis>
                <property>style class redefinition method.</property>
            </emphasis> Default style classes are mapped on <emphasis>
                <property>skin parameters.</property>
            </emphasis></para>
        <para>There are two ways to redefine the appearance of all <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> components at once: <itemizedlist>
                <listitem>Redefine the corresponding skin parameters</listitem>
                <listitem> Add to your style sheets style classes used by a <emphasis role="bold">
                        <property>&lt;rich:listShuttle&gt;</property>
                    </emphasis> component</listitem>
            </itemizedlist>
        </para>
    </section>
    <section>
        <title>Definition of Custom Style Classes</title>

        <para>On the screenshot there are classes names that define styles for component elements.</para>

        <!-- ADD SCREENSHOT -->

        <!-- ADD ITEMS representations!!!-->

        <table>
            <title>Classes names that define a caption representations in the source list</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Class name</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>rich-shuttle-source-caption</entry>
                        <entry>Defines a class for caption customization</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <table>
            <title>Classes names that define a caption representations in the target list</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Class name</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>rich-shuttle-target-caption</entry>
                        <entry>Defines a class for caption customization</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <table>
            <title>Classes names that define a rows representations in the source list</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Class name</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>rich-shuttle-source-row</entry>
                        <entry>Defines a default class for any item row</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-row-source-selected</entry>
                        <entry>Defines class to be additionally added to selected item rows</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-row-source-active</entry>
                        <entry>Defines class to be additionally added to active item rows</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <table>
            <title>Classes names that define a rows representations in the target list</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Class name</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>rich-shuttle-target -row</entry>
                        <entry>Defines a default class for any item row</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-row-target -selected</entry>
                        <entry>Defines class to be additionally added to selected item rows</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-row-target -active</entry>
                        <entry>Defines class to be additionally added to active item rows</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <table>
            <title>Classes names that define a cells representations in the source list</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Class name</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>rich-shuttle-source-cell</entry>
                        <entry>Defines a default class for any item cell</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-source-cell-selected</entry>
                        <entry>Defines class to be additionally added to selected item cells</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-source-cell-active</entry>
                        <entry>Defines class to be additionally added to active item cells</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <table>
            <title>Classes names that define a cells representations in the target list</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Class name</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>rich-shuttle-target -cell</entry>
                        <entry>Defines a default class for any item cell</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-target -cell-selected</entry>
                        <entry>Defines class to be additionally added to selected item cells</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-target -cell-active</entry>
                        <entry>Defines class to be additionally added to active item cells</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <table>
            <title>Classes names that define controls representations</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Class name</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>rich-ordering-controls</entry>
                        <entry>Could be applied to the whole group of the controls.</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-top</entry>
                        <entry>Defines class for Top control</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-bottom</entry>
                        <entry>Defines class for Bottom control</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-up</entry>
                        <entry>Defines class for Up control</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-down</entry>
                        <entry>Defines class for Down control</entry>
                    </row>

                    <row>
                        <entry>rich-shuttle-copy</entry>
                        <entry>Defines class for Copy control</entry>
                    </row>

                    <row>
                        <entry>rich-shuttle-remove</entry>
                        <entry>Defines class for Remove control</entry>
                    </row>

                    <row>
                        <entry>rich-shuttle-copyAll</entry>
                        <entry>Defines class for copyAll control</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-removeAll</entry>
                        <entry>Defines class for removeAll control</entry>
                    </row>
                    <row>
                        <entry>rich-shuttle-control-disabled</entry>
                        <entry>Defines a class for any control in a disabled state</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>In order to redefine styles for all <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> components on a page using CSS, it's enough to create classes with the same
            names and define necessary properties in them. </para>
        <para>To change styles of particular <emphasis role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> components, define your own style classes in the corresponding <emphasis
                role="bold">
                <property>&lt;rich:listShuttle&gt;</property>
            </emphasis> component attributes.</para>
    </section>
</section>
