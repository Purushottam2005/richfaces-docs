<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<chapter id="chap-Developer_Guide-Getting_started_with_RichFaces">
	<title>Getting started with RichFaces</title>
	<para>
		Follow the instructions in this chapter configure the RichFaces framework for development. RichFaces applications can be developed using <productname>JBoss Tools</productname>, as described in <xref linkend="sect-Developer_Guide-Getting_started_with_RichFaces-Creating_a_project_with_JBoss_Tools" />; or using <productname>Maven</productname>, as described in <xref linkend="sect-Developer_Guide-Getting_started_with_RichFaces-Creating_a_project_with_Maven" />. 
	</para>
	<para>
		If you have existing projects that use a previous version of RichFaces, refer to the <citetitle>RichFaces Migration Guide</citetitle>.
	</para>
	<section id="sect-Developer_Guide-Getting_started_with_RichFaces-Technical_Requirements">
		<title>Technical Requirements</title>
		<para>
			The minimum technical requirements needed to get started with RichFaces are outlined below.
		</para>
		<itemizedlist>
			<listitem>
				<para>
					Java Development Kit (<acronym>JDK</acronym>) 1.5 or higher
				</para>
			</listitem>
			<listitem>
				<para>
					<productname>JBoss Tools 3.1</productname>
				</para>
			</listitem>
			<listitem>
				<para>
					A <productname>JavaServer Faces 2</productname>  (<acronym>JSF 2</acronym>) implementation
				</para>
			</listitem>
			<listitem>
				<para>
					An application server, such as <productname>JBoss Application Server 6</productname> or <productname>Apache Tomcat 6</productname>.
				</para>
			</listitem>
			<listitem>
				<para>
					A web browser, such as <productname>Firefox 3.5</productname> or <productname>Internet Explorer 7</productname>
				</para>
			</listitem>
		</itemizedlist>
		<para>
			RichFaces supports additional products not listed here. Refer to <xref linkend="sect-Component_Reference-RichFaces_overview-Full_technical_requirements" /> for a full list of technical requirements and supported envrionments, browsers, and tools.
		</para>
		
	</section>
	
	<section id="sect-Developer_Guide-Getting_started_with_RichFaces-Setting_up_RichFaces">
		<title>Setting up RichFaces</title>
		<para>
			Follow the instructions in this section to set up the RichFaces framework and begin building applications.
		</para>
		<procedure>
			<step>
				<title>Download RichFaces archive</title>
				<para>
					Download RichFaces from the JBoss RichFaces Downloads area at <ulink url="http://www.jboss.org/richfaces/download.html">http://www.jboss.org/richfaces/download.html</ulink>. The binary files (available in <filename class="extension">.bin.zip</filename> or <filename class="extension">.bin.tar.gz</filename> archives) contain a compiled, ready-to-use version of RichFaces with a set of basic skins.
				</para>
				<stepalternatives>
					<step>
						<title>Compiling from source</title>
						<para>
							Instead of downloading the pre-compiled binaries, you can download the source files and compile them yourself. Refer to <xref linkend="sect-Component_Reference-RichFaces_overview-Compiling_from_source_code" /> for further instructions.
						</para>
					</step>
				</stepalternatives>
			</step>
			<step>
				<title>Unzip archive</title>
				<para>
					Create a new directory named <filename>RichFaces</filename>, then unzip the archive containing the binaries there.
				</para>
			</step>
		</procedure>

	</section>
	
	<section id="sect-Developer_Guide-Getting_started_with_RichFaces-Creating_a_project_with_JBoss_Tools">
		<title>Creating a project with <productname>JBoss Tools</productname></title>
		<para>
			Follow the procedure in this section to create a new RichFaces application with <productname>JBoss Tools</productname>.
		</para>
		<procedure>
			<step id="step-Developer_Guide-Creating_a_project-Create_a_new_project">
				<title>Create a new project</title>
				<para>
					Create a new project based on the JSF 2 environment. In <productname>JBoss Tools</productname>, select <menuchoice><guimenu>File</guimenu><guimenu>New</guimenu><guimenuitem>JSF Project</guimenuitem></menuchoice> from the menu. Name the project, select <guilabel>JSF 2</guilabel> from the <guilabel>JSF Environment</guilabel> drop-down box, and click the <guibutton>Finish</guibutton> button to create the project.
				</para>
			</step>
			<step id="step-Developer_Guide-Creating_a_project-Add_the_RichFaces_libraries_to_the_project">
				<title>Add the RichFaces libraries to the project</title>
				<para>
					Add <filename>core-ui.jar</filename>, <filename>richfaces-api.jar</filename>, and <filename>richfaces-impl.jar</filename> into your project by copying them from the location where you unzipped the RichFaces archive to the <filename>WebContent/WEB-INF/lib/</filename> directory of your project in <application>JBoss Tools</application>.
				</para>
				<!--
				<note>
					<title>Other required libraries</title>
					<para>
						RichFaces also requires the following libraries to be referenced in your project. Typically they are already included when creating a JSF project in <application>JBoss Tools</application>.
					</para>
					<itemizedlist>
						<listitem>
							<para>
								<filename>commons-beanutils.jar</filename>
							</para>
						</listitem>
						<listitem>
							<para>
								<filename>commons-collections.jar</filename>
							</para>
						</listitem>
						<listitem>
							<para>
								<filename>commons-digester.jar</filename>
							</para>
						</listitem>
						<listitem>
							<para>
								<filename>commons-logging.jar</filename>
							</para>
						</listitem>
						<listitem>
							<para>
								<filename>jhighlight.jar</filename>
							</para>
						</listitem>
					</itemizedlist>
				</note>
				-->
			</step>
			<step id="step-Developer_Guide-Creating_a_project-Reference_the_tag_libraries">
				<title>Reference the tag libraries</title>
				<para>
					The RichFaces tag libraries need to be referenced on each XHTML page in your project:
				</para>
				
<programlisting language="XML" role="XML">&lt;ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:a4j="http://richfaces.org/a4j"
                xmlns:rich="http://richfaces.org/rich"&gt;
    ...
&lt;/ui:composition&gt;
</programlisting>
			</step>
		</procedure>
		
		<para>
			You are now ready to begin constructing your RichFaces applications.
		</para>
	</section>
	
	<section id="sect-Developer_Guide-Getting_started_with_RichFaces-Creating_a_project_with_Maven">
		<title>Creating a project with <productname>Maven</productname></title>
		<para>
			<productname>Apache Maven</productname> is a build automation and project management tool for Java projects. Follow the instructions in this section to create a <productname>Maven</productname> project for <productname>RichFaces</productname>.
		</para>
		<section id="sect-Component_Using_RichFaces_with_Maven-Setting_up_Maven">
			<title>Setting up <productname>Maven</productname></title>
			<para>
				<productname>Maven</productname> can be downloaded and installed from Apache's website at <ulink url="http://maven.apache.org/download.html">http://maven.apache.org/download.html</ulink>. Version 2.2.1 is recommended.
			</para>
			<para>
				Once <productname>Maven</productname> has been installed, no further configuration is required to begin building Maven projects.
			</para>
		</section>
		<section id="sect-Component_Reference-Using_RichFaces_with_Maven-Using_the_RichFaces_project_archetype">
			<title>Using the <productname>RichFaces</productname> project archetype</title>
			<procedure>
				<step id="step-Developer_Guide-Using_RichFaces_with_Maven-Add_required_repositories">
					<title>Add required repositories</title>
					<para>
						A structure for the project with minimal content can be created with the Maven archetype named <filename>maven-archetype-jsfwebapp</filename> <remark>(may be renamed in a later release)</remark> included as part of the RichFaces Component Development Kit (<acronym>CDK</acronym>). The archetype and the project itself require the JBoss repository to be provided (<filename>https://repository.jboss.org/nexus/content/groups/public/</filename>). To make the repositories accessible to Maven, add a profile in the <filename><replaceable>maven_installation_folder</replaceable>/conf/settings.xml</filename> file under the <sgmltag>&lt;profiles&gt;</sgmltag> element:
					</para>
				
	<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/prog-Developer_Guide-Using_RichFaces_with_Maven-Add_required_repositories.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
					<para>
						The profile then needs to be activated in the <sgmltag>&lt;activeProfiles&gt;</sgmltag> element:
					</para>
				
<programlisting language="XML" role="XML">&lt;activeProfiles&gt;
	&lt;activeProfile&gt;jboss-public-repository&lt;/activeProfile&gt;
&lt;/activeProfiles&gt;</programlisting>
				</step>
				<step id="step-Developer_Guide-Using_RichFaces_with_Maven-Generate_the_project_from_the_archetype">
					<title>Generate the project from the archetype</title>
				
	<!--
	<remark>ONCE 4.0 ARCHETYPE IS COMPLETE:</remark>
					<para>
						The project can now be generated with the <filename>maven-archetype-jsfwebapp</filename> <remark>(may be renamed in a later release)</remark> archetype. Create a new directory for your project, then run the following Maven command:
					</para>
	<screen>mvn archetype:generate -DarchetypeGroupId=org.richfaces.cdk -DarchetypeArtifactId=maven-archetype-jsfwebapp -DarchetypeVersion=4.0.0-SNAPSHOT -DgroupId=<replaceable>org.docs.richfaces</replaceable> -DartifactId=<replaceable>jsf-app</replaceable></screen>
	-->

					<para>
						The project can now be generated with the <filename>maven-archetype-jsfwebapp</filename> archetype. The archetype for <productname>RichFaces 4.0</productname> is still in development; use the archetype for <productname>RichFaces 3.3.3</productname> to generate a project until the 4.0 archetype is released. Create a new directory for your project, then run the following Maven command:
					</para>
	<screen>mvn archetype:generate -DarchetypeGroupId=org.richfaces.cdk -DarchetypeArtifactId=maven-archetype-jsfwebapp -DarchetypeVersion=3.3.3-SNAPSHOT -DgroupId=<replaceable>org.docs.richfaces</replaceable> -DartifactId=<replaceable>jsf-app</replaceable></screen>
					<para>
						The following parameters can be used to customize your project:
					</para>
					<variablelist>
						<varlistentry>
							<term><command>-DgroupId</command></term>
							<listitem>
								<para>
									Defines the package for the Managed Beans
								</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term><command>-DartifactId</command></term>
							<listitem>
								<para>
									Defines the name of the project
								</para>
							</listitem>
						</varlistentry>
					</variablelist>
					<para>
						The command generates a JSF project with the following structure:
					</para>
	<screen><replaceable>jsf-app</replaceable>
	├── <filename>pom.xml</filename>
	└── <filename>src</filename>
		├── <filename>main</filename>
		│   ├── <filename>java</filename>
		│   │   └── <filename>org</filename>
		│   │       └── <filename>docs</filename>
		│   │           └── <filename>richfaces</filename>
		│   │               └── <filename>Bean.java</filename>
		│   ├── <filename>resources</filename>
		│   └── <filename>webapp</filename>
		│       ├── <filename>WEB-INF</filename>
		│       │   ├── <filename>faces-config.xml</filename>
		│       │   └── <filename>web.xml</filename>
		│       ├── <filename>index.xhtml</filename>
		│       └── <filename>pages</filename>
		│           └── <filename>index.xhtml</filename>
		└── <filename>test</filename>
		    └── <filename>java</filename>
		        └── <filename>org</filename>
		            └── <filename>docs</filename>
		                └── <filename>richfaces</filename>
		                    └── <filename>BeanTest.java</filename></screen>
				</step>
				<step id="step-Developer_Guide-Using_RichFaces_with_Maven-Add_dependencies">
					<title>Add dependencies</title>
					<para>
						Your root directory of your project contains a project descriptor file, <filename>pom.xml</filename>. To add RichFaces libraries to your project, edit the project descriptor to add dependencies to the <sgmltag>&lt;dependencies&gt;</sgmltag> element as follows:
					</para>
				
	<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/prog-Developer_Guide-Using_RichFaces_with_Maven-Add_dependencies.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
				
					<!-- Remove the following for Enterprise documentation -->
					<para>
						If you wish to include modules for test-driven JSF development, add any dependencies for the tests to the <filename>pom.xml</filename> file. For full details on how to use the <productname>jsf-test</productname> project, refer to <ulink url="http://community.jboss.org/docs/DOC-13155">http://community.jboss.org/wiki/TestDrivenJSFDevelopment</ulink>.
					</para>
				</step>
			
	<!--
	<remark>REMOVE ONCE 4.0 ARCHETYPE IS COMPLETE</remark>
	-->
				<step id="step-Developer_Guide-Using_RichFaces_with_Maven-Update_the_generated_project">
					<title>Update the generated project</title>
					<para>
						After the project has been generated from the old archetype, it must be updated to use RichFaces &VERSION; and JSF 2.
					</para>
					<para>
						RichFaces &VERSION; uses Facelets and does not support JSP. Any <filename>index.jsp</filename> pages that were generated need to forward <filename>home.jsf</filename> page equivalents.
					</para>
					<!--
					<substeps>
						<step>
							<title>Deactivate the VDL view handler</title>
							<para>
								The <acronym>VDL</acronym> (View Definition Language) view handler must be deactivated for your project to work with JSF 2. To deactivate the viewhandler, edit the project's <filename>web.xml</filename> settings file with the following context parameter:
							</para>
	<programlisting language="XML" role="XML"><xi:include parse="text" href="extras/prog-Developer_Guide-Using_RichFaces_with_Maven-Update_the_generated_project.xml_sample" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
						</step>
					</substeps>
					-->
				</step>
			
				<step id="step-Developer_Guide-Using_RichFaces_with_Maven-Build_the_project">
					<title>Build the project</title>
					<para>
						Build the project from the command line by entering the <command>mvn install</command> command.
					</para>
					<para>
						The <computeroutput>BUILD SUCCESSFUL</computeroutput> message indicates the project has been assembled and is ready to import into an IDE (integrated development environment).
					</para>
				</step>
			
				<step id="step-Developer_Guide-Build_the_project-Building_for_Eclipse_and_JBoss_Tools">
					<title>Import the project into an IDE</title>
					<para>
						Import the Maven project into your IDE. For <application>Eclipse</application> and <application>JBoss Tools</application>, you can either use <application>Maven</application> to prepare the project, or import the project using the <productname>M2Eclipse</productname> plug-in.
					</para>
					<stepalternatives>
						<step>
							<title>Using <application>Maven</application> to prepare the project for <application>Eclipse</application></title>
							<para>
								Enter the following command in the root directory of the project:
							</para>
	<screen>mvn eclipse:eclipse -DdownloadSources=true -Dwtpversion=2.0</screen>
							<para>
								The command generates the required <application>Eclipse</application> project files. You can then import the project into <application>Eclipse</application> and <application>JBoss Tools</application> through the importing wizard by choosing <menuchoice><guimenu>File</guimenu><guimenuitem>Import</guimenuitem></menuchoice> from the menu. Select <menuchoice><guimenu>General</guimenu><guimenuitem>Existing Projects into Workspace</guimenuitem></menuchoice> as the import source and choose the root directory for your project.
							</para>
						</step>
						<step>
							<title>Using the <productname>M2Eclipse</productname> plug-in</title>
							<para>
								Alternatively, you can import a <application>Maven</application> project into <application>Eclipse</application> and <application>JBoss Tools</application> using the <productname>M2Eclipse</productname> plug-in. With the plug-in installed, open the importing wizard by choosing <menuchoice><guimenu>File</guimenu><guimenuitem>Import</guimenuitem></menuchoice> from the menu. Select <menuchoice><guimenu>Maven</guimenu><guimenuitem>Existing Maven Projects</guimenuitem></menuchoice> as the import source and choose the <filename>pom.xml</filename> file for your project.
							</para>
						</step>
					</stepalternatives>
				</step>
				<!--
				<step id="step-Developer_Guide-Using_RichFaces_with_Maven-Add_tag_library_references">
					<title>Add tag library references</title>
					<para>
						After importing, edit the <filename><replaceable>jsf-app</replaceable>/src/main/webapp/pages/index.xhtml</filename> file to include the tag library declaration as described in <xref linkend="step-Developer_Guide-Creating_a_project-Reference_the_tag_libraries" /> of <xref linkend="sect-Developer_Guide-Getting_started_with_RichFaces-Creating_a_project" />.
					</para>
				</step>
				-->
			</procedure>
		
			<para>
				Your project is now ready to use. Once components and functionality have been added, you can run the application on a server and access it through a web browser at the address <filename>http://localhost:8080/<replaceable>jsf-app</replaceable>/</filename>.
			</para>
		</section>
		
	</section>
	
	<section id="sect-Developer_Guide-Getting_started_with_RichFaces-Using_RichFaces_in_existing_JSF2_projects">
		<title>Using RichFaces in existing JSF2 projects</title>
		<para>
			RichFaces can be added to existing JSF2 projects by adding references to the new RichFaces libraries. Refer to <xref linkend="step-Developer_Guide-Creating_a_project-Add_the_RichFaces_libraries_to_the_project" /> and <xref linkend="step-Developer_Guide-Creating_a_project-Reference_the_tag_libraries" /> in <xref linkend="sect-Developer_Guide-Getting_started_with_RichFaces-Creating_a_project_with_JBoss_Tools" /> for details.
		</para>
	</section>

</chapter>

